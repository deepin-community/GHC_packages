Source: haskell-cmdargs
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Build-Depends: debhelper (>= 7)
  , cdbs
  , haskell-devscripts (>= 0.8)
  , ghc
  , ghc-prof
  , libghc-transformers-dev
  , libghc-transformers-prof
Build-Depends-Indep: ghc-doc
  , libghc-transformers-doc
Standards-Version: 3.9.2
Homepage: http://hackage.haskell.org/package/cmdargs
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-cmdargs
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-cmdargs

Package: libghc-cmdargs-dev
Architecture: any
Depends: ${haskell:Depends}
  , ${shlibs:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: command-line argument processing
 This package provides a library for the Haskell programming language.
 See http://www.haskell.org/ for more information on Haskell.
 .
 It provides an easy way to define command-line parsers. Most users
 will want to use the System.Console.CmdArgs.Implicit module, whose
 documentation contains an example.
 .
 System.Console.CmdArgs.Explicit provides a way to write command-line
 parsers for both single mode programs (most programs) and multiple
 mode programs (e.g. darcs or cabal). Parsers are defined by
 constructing a data structure.
 .
 System.Console.CmdArgs.Implicit provides a way to concisely define
 command-line parsers, up to three times shorter than getopt. These
 parsers are translated into the Explicit data type.
 .
 System.Console.CmdArgs.GetOpt provides a wrapper allowing
 compatiblity with existing getopt parsers, mapping to the Explicit
 data type.

Package: libghc-cmdargs-prof
Architecture: any
Depends: ${haskell:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: command-line argument processing; profiling libraries
 This package provides a library for the Haskell programming language,
 compiled for profiling.
 See http://www.haskell.org/ for more information on Haskell.
 .
 It provides an easy way to define command-line parsers. Most users
 will want to use the System.Console.CmdArgs.Implicit module, whose
 documentation contains an example.
 .
 System.Console.CmdArgs.Explicit provides a way to write command-line
 parsers for both single mode programs (most programs) and multiple
 mode programs (e.g. darcs or cabal). Parsers are defined by
 constructing a data structure.
 .
 System.Console.CmdArgs.Implicit provides a way to concisely define
 command-line parsers, up to three times shorter than getopt. These
 parsers are translated into the Explicit data type.
 .
 System.Console.CmdArgs.GetOpt provides a wrapper allowing
 compatiblity with existing getopt parsers, mapping to the Explicit
 data type.

Package: libghc-cmdargs-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${haskell:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: command-line argument processing; documentation
 This package provides the documentation for a library for the Haskell
 programming language.
 See http://www.haskell.org/ for more information on Haskell.
 .
 It provides an easy way to define command-line parsers. Most users
 will want to use the System.Console.CmdArgs.Implicit module, whose
 documentation contains an example.
 .
 System.Console.CmdArgs.Explicit provides a way to write command-line
 parsers for both single mode programs (most programs) and multiple
 mode programs (e.g. darcs or cabal). Parsers are defined by
 constructing a data structure.
 .
 System.Console.CmdArgs.Implicit provides a way to concisely define
 command-line parsers, up to three times shorter than getopt. These
 parsers are translated into the Explicit data type.
 .
 System.Console.CmdArgs.GetOpt provides a wrapper allowing
 compatiblity with existing getopt parsers, mapping to the Explicit
 data type.
