Description: Add eq constraint
Author: Joachim Breitner <nomeata@debian.org>

--- haskell-haskore-0.2.0.2.orig/src/Haskore/Example/SelfSim.lhs
+++ haskell-haskore-0.2.0.2/src/Haskore/Example/SelfSim.lhs
@@ -31,10 +31,10 @@ An example of self-similar, or fractal,
 > addmult pds iss = zipWith addmult' pds iss
 >                   where addmult' (p,d) (i,s) = (p+i,d*s)
 >
-> simFringe :: (Num a) => a -> Pat -> [SNote]
+> simFringe :: (Eq a, Num a) => a -> Pat -> [SNote]
 > simFringe n pat = fringe n (Cl [(0,0)] (sim pat))
 >
-> fringe :: (Num a) => a -> Cluster -> [SNote]
+> fringe :: (Eq a, Num a) => a -> Cluster -> [SNote]
 > fringe 0 (Cl n _)   = [n]
 > fringe m (Cl _ cls) = concatMap (fringe (m-1)) cls
 >
