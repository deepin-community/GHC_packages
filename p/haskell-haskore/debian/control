Source: haskell-haskore
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Ernesto Hern√°ndez-Novich (USB) <emhn@usb.ve>
Build-Depends: debhelper (>= 7), cdbs, quilt, haskell-devscripts (>= 0.7),
 ghc6, ghc6-prof,
 hevea, lhs2tex, texlive-latex-base, texlive-latex-recommended,
 texlive-latex-extra, texlive-math-extra, pgf,
 texlive-font-utils,
 doc-base,
 libghc6-event-list-dev, libghc6-event-list-prof,
 libghc6-markov-chain-dev, libghc6-markov-chain-prof,
 libghc6-non-negative-dev, libghc6-non-negative-prof,
 libghc6-data-accessor-dev, libghc6-data-accessor-prof,
 libghc6-utility-ht-dev, libghc6-utility-ht-prof,
 libghc6-transformers-dev, libghc6-transformers-prof,
 libghc6-haskell-src-dev, libghc6-haskell-src-prof,
 libghc6-parsec2-dev, libghc6-parsec2-prof,
 libghc6-quickcheck1-dev, libghc6-quickcheck1-prof,
 libghc6-hunit-dev, libghc6-hunit-prof,
 libghc6-midi-dev, libghc6-midi-prof
Build-Depends-Indep: ghc6-doc,
 libghc6-event-list-doc,
 libghc6-markov-chain-doc,
 libghc6-non-negative-doc,
 libghc6-data-accessor-doc,
 libghc6-utility-ht-doc,
 libghc6-transformers-doc,
 libghc6-haskell-src-doc,
 libghc6-parsec2-doc,
 libghc6-midi-doc
Standards-Version: 3.8.4
Homepage: http://hackage.haskell.org/package/haskore
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-haskore
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=haskell/haskell-haskore

Package: libghc6-haskore-dev
Architecture: any
Depends: ${haskell:Depends}, ${shlibs:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}, timidity | playmidi | pmidi, csound
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Haskore Computer Music System
 This package provides a library for the Haskell programming language.
 See http://www.haskell.org/ for more information on Haskell.
 .
 This library provides a collection of Haskell modules designed for
 expressing musical structures in the high-level, declarative style of
 functional programming. In Haskore, musical objects consist of primitive
 notions such as notes and rests, operations to transform musical objects
 such as transpose and tempo-scaling, and operations to combine musical
 objects to form more complex ones, such as concurrent and sequential
 composition. From these simple roots, much richer musical ideas can
 easily be developed.
 .
 It outputs music representations in MIDI, CSound, SuperCollider or
 directly as an audio signal.

Package: libghc6-haskore-prof
Architecture: any
Depends: ${haskell:Depends}, ${shlibs:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}, timidity | playmidi | pmidi, csound
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Haskore Computer Music System; profiling libraries
 This package provides a library for the Haskell programming language
 compiled for profiling.
 See http://www.haskell.org/ for more information on Haskell.
 .
 This library provides a collection of Haskell modules designed for
 expressing musical structures in the high-level, declarative style of
 functional programming. In Haskore, musical objects consist of primitive
 notions such as notes and rests, operations to transform musical objects
 such as transpose and tempo-scaling, and operations to combine musical
 objects to form more complex ones, such as concurrent and sequential
 composition. From these simple roots, much richer musical ideas can
 easily be developed.
 .
 It outputs music representations in MIDI, CSound, SuperCollider or
 directly as an audio signal.

Package: libghc6-haskore-doc
Section: doc
Architecture: all
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Haskore Computer Music System; documentation
 This package provides the documentation for a library for the Haskell
 programming language.
 See http://www.haskell.org/ for more information on Haskell.
 .
 This library provides a collection of Haskell modules designed for
 expressing musical structures in the high-level, declarative style of
 functional programming. In Haskore, musical objects consist of primitive
 notions such as notes and rests, operations to transform musical objects
 such as transpose and tempo-scaling, and operations to combine musical
 objects to form more complex ones, such as concurrent and sequential
 composition. From these simple roots, much richer musical ideas can
 easily be developed.
 .
 It outputs music representations in MIDI, CSound, SuperCollider or
 directly as an audio signal.
