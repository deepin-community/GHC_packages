Source: haskell-semigroupoids
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Iulian Udrea <iulian@linux.com>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.9),
 cdbs,
 ghc,
 ghc-prof,
 libghc-comonad-dev (>= 4),
 libghc-comonad-dev (<< 5),
 libghc-comonad-prof,
 libghc-contravariant-dev (>= 0.2.0.1),
 libghc-contravariant-dev (<< 2),
 libghc-contravariant-prof,
 libghc-distributive-dev (>= 0.2.2),
 libghc-distributive-dev (<< 1),
 libghc-distributive-prof,
 libghc-semigroups-dev (>= 0.8.3.1),
 libghc-semigroups-dev (<< 1),
 libghc-semigroups-prof,
 libghc-transformers-compat-dev (>= 0.3),
 libghc-transformers-compat-dev (<< 0.5),
 libghc-transformers-compat-prof,
Build-Depends-Indep: ghc-doc,
 libghc-comonad-doc,
 libghc-contravariant-doc,
 libghc-distributive-doc,
 libghc-semigroups-doc,
 libghc-transformers-compat-doc,
Standards-Version: 3.9.4
Homepage: http://github.com/ekmett/semigroupoids
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-semigroupoids
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-semigroupoids

Package: libghc-semigroupoids-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Haskell 98 semigroupoids: Category sans id${haskell:ShortBlurb}
 A Semigroupoid is a Category without the requirement of identity arrows for
 every object in the category.
 .
 When working with comonads you often have the <*> portion of an Applicative,
 but not the pure. This was captured in Uustalu and Vene's "Essence of Dataflow
 Programming" in the form of the ComonadZip class in the days before
 Applicative. Apply provides a weaker invariant, but for the comonads used for
 data flow programming (found in the streams package), this invariant is
 preserved. Applicative function composition forms a semigroupoid.
 .
 ${haskell:Blurb}

Package: libghc-semigroupoids-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Haskell 98 semigroupoids: Category sans id${haskell:ShortBlurb}
 A Semigroupoid is a Category without the requirement of identity arrows for
 every object in the category.
 .
 When working with comonads you often have the <*> portion of an Applicative,
 but not the pure. This was captured in Uustalu and Vene's "Essence of Dataflow
 Programming" in the form of the ComonadZip class in the days before
 Applicative. Apply provides a weaker invariant, but for the comonads used for
 data flow programming (found in the streams package), this invariant is
 preserved. Applicative function composition forms a semigroupoid.
 .
 ${haskell:Blurb}

Package: libghc-semigroupoids-doc
Architecture: all
Section: doc
Depends: ${misc:Depends},
 ${haskell:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: Haskell 98 semigroupoids: Category sans id${haskell:ShortBlurb}
 A Semigroupoid is a Category without the requirement of identity arrows for
 every object in the category.
 .
 When working with comonads you often have the <*> portion of an Applicative,
 but not the pure. This was captured in Uustalu and Vene's "Essence of Dataflow
 Programming" in the form of the ComonadZip class in the days before
 Applicative. Apply provides a weaker invariant, but for the comonads used for
 data flow programming (found in the streams package), this invariant is
 preserved. Applicative function composition forms a semigroupoid.
 .
 ${haskell:Blurb}
