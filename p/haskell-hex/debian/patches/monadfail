--- a/Data/Hex.hs
+++ b/Data/Hex.hs
@@ -34,7 +34,7 @@
     unhex (a:b:r) = do x <- c a
                        y <- c b
                        liftM (toEnum ((x * 16) + y) :) $ unhex r
-    unhex [_]      = fail "Non-even length"
+    unhex [_]      = error "Non-even length"
 
 
 c :: Monad m => Char -> m Int
@@ -60,7 +60,7 @@
 c 'd' = return 13
 c 'e' = return 14
 c 'f' = return 15
-c _   = fail "Invalid hex digit!"
+c _   = error "Invalid hex digit!"
 
 instance Hex B.ByteString where
     hex = B.pack . hex . B.unpack
