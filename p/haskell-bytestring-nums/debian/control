Source: haskell-bytestring-nums
Section: haskell
Priority: optional
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: TANIGUCHI Takaki <takaki@debian.org>
Build-Depends: cdbs, debhelper (>= 7.0.50~), haskell-devscripts,
	ghc,
	ghc-prof,
	ghc-doc,
Standards-Version: 3.9.2
Homepage: http://github.com/solidsnack/bytestring-nums

Package: libghc-bytestring-nums-dev
Architecture: any
Depends: ${haskell:Depends}, ${shlibs:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Suggests: ${haskell:Suggests}
Description: Parse numeric literals from ByteStrings.
 A time and space-efficient implementation of byte vectors using packed
 Word8 arrays, suitable for high performance use, both in terms of large
 data quantities, or high speed requirements. Byte vectors are encoded as
 strict Word8 arrays of bytes, and lazy lists of strict chunks, held in a
 ForeignPtr, and can be passed between C and Haskell with little effort.
 .
 Parse numeric literals from ByteStrings.
 .
 This package contains the libraries compiled for GHC.

Package: libghc-bytestring-nums-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Suggests: ${haskell:Suggests}
Description: Parse numeric literals from ByteStrings.; profiling library
 A time and space-efficient implementation of byte vectors using packed
 Word8 arrays, suitable for high performance use, both in terms of large
 data quantities, or high speed requirements. Byte vectors are encoded as
 strict Word8 arrays of bytes, and lazy lists of strict chunks, held in a
 ForeignPtr, and can be passed between C and Haskell with little effort.
 .
 Parse numeric literals from ByteStrings.
 .
 This package contains the profiling libraries compiled for GHC.

Package: libghc-bytestring-nums-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Parse numeric literals from ByteStrings.; documentation
 A time and space-efficient implementation of byte vectors using packed
 Word8 arrays, suitable for high performance use, both in terms of large
 data quantities, or high speed requirements. Byte vectors are encoded as
 strict Word8 arrays of bytes, and lazy lists of strict chunks, held in a
 ForeignPtr, and can be passed between C and Haskell with little effort.
 .
 Parse numeric literals from ByteStrings.
 .
 This package contains the library documentation.
