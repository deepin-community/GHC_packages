Source: haskell-monadcatchio-transformers
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: TANIGUCHI Takaki <takaki@debian.org>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
 libghc-extensible-exceptions-dev (>= 0.1),
 libghc-extensible-exceptions-dev (<< 0.2),
 libghc-extensible-exceptions-prof,
 libghc-monads-tf-dev (>= 0.1),
 libghc-monads-tf-dev (<< 0.2),
 libghc-monads-tf-prof,
Build-Depends-Indep: ghc-doc,
 libghc-extensible-exceptions-doc,
 libghc-monads-tf-doc,
Standards-Version: 3.9.6
Homepage: http://hackage.haskell.org/package/MonadCatchIO-transformers
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-monadcatchio-transformers
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-monadcatchio-transformers

Package: libghc-monadcatchio-transformers-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Monad-transformer compatible with Control.Exception${haskell:ShortBlurb}
 Provides functions to throw and catch exceptions. Unlike the functions from
 Control.Exception, which work in IO, these work in any stack of monad
 transformers (from the 'transformers' package) with IO as the base monad.
 You can extend this functionality to other monads, by creating an instance
 of the MonadCatchIO class.
 .
 Warning: this package is deprecated. Use the 'exceptions' package instead, if
 possible.
 .
 ${haskell:Blurb}

Package: libghc-monadcatchio-transformers-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Monad-transformer compatible with Control.Exception${haskell:ShortBlurb}
 Provides functions to throw and catch exceptions. Unlike the functions from
 Control.Exception, which work in IO, these work in any stack of monad
 transformers (from the 'transformers' package) with IO as the base monad.
 You can extend this functionality to other monads, by creating an instance
 of the MonadCatchIO class.
 .
 Warning: this package is deprecated. Use the 'exceptions' package instead, if
 possible.
 .
 ${haskell:Blurb}

Package: libghc-monadcatchio-transformers-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: Monad-transformer compatible with Control.Exception${haskell:ShortBlurb}
 Provides functions to throw and catch exceptions. Unlike the functions from
 Control.Exception, which work in IO, these work in any stack of monad
 transformers (from the 'transformers' package) with IO as the base monad.
 You can extend this functionality to other monads, by creating an instance
 of the MonadCatchIO class.
 .
 Warning: this package is deprecated. Use the 'exceptions' package instead, if
 possible.
 .
 ${haskell:Blurb}
