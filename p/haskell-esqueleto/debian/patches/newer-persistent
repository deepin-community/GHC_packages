--- a/esqueleto.cabal
+++ b/esqueleto.cabal
@@ -63,10 +63,10 @@
   other-modules:
     Database.Esqueleto.Internal.PersistentImport
   build-depends:
-      base                 >= 4.5     && < 4.9
+      base                 >= 4.5     && < 4.10
     , bytestring
     , text                 >= 0.11    && < 1.3
-    , persistent           >= 2.1.1.7 && < 2.3
+    , persistent           >= 2.1.1.7 && < 2.7
     , transformers         >= 0.2
     , unordered-containers >= 0.2
     , tagged               >= 0.2
--- a/src/Database/Esqueleto.hs
+++ b/src/Database/Esqueleto.hs
@@ -430,8 +430,8 @@
 
 -- | Synonym for 'Database.Persist.Store.delete' that does not
 -- clash with @esqueleto@'s 'delete'.
-deleteKey :: ( PersistStore (PersistEntityBackend val)
+deleteKey :: ( PersistStoreWrite b
              , MonadIO m
-             , PersistEntity val )
-          => Key val -> ReaderT (PersistEntityBackend val) m ()
+             , PersistRecordBackend val b)
+          => Key val -> ReaderT b m ()
 deleteKey = Database.Persist.delete
--- a/src/Database/Esqueleto/Internal/PersistentImport.hs
+++ b/src/Database/Esqueleto/Internal/PersistentImport.hs
@@ -5,7 +5,7 @@
   ) where
 
 import Database.Persist.Sql hiding
-  ( BackendSpecificFilter, Filter(..), PersistQuery(..), SelectOpt(..)
+  ( BackendSpecificFilter, Filter(..), PersistQueryRead(..), SelectOpt(..)
   , Update(..), delete, deleteWhereCount, updateWhereCount, selectList
   , selectKeysList, deleteCascadeWhere, (=.), (+=.), (-=.), (*=.), (/=.)
   , (==.), (!=.), (<.), (>.), (<=.), (>=.), (<-.), (/<-.), (||.)
--- a/test/Test.hs
+++ b/test/Test.hs
@@ -1395,11 +1395,10 @@
 ----------------------------------------------------------------------
 
 
-insert' :: ( Functor m
-           , PersistStore (PersistEntityBackend val)
+insert' :: ( PersistStoreWrite b
            , MonadIO m
-           , PersistEntity val )
-        => val -> ReaderT (PersistEntityBackend val) m (Entity val)
+           , PersistRecordBackend val b)
+        => val -> ReaderT b m (Entity val)
 insert' v = flip Entity v <$> insert v
 
 
