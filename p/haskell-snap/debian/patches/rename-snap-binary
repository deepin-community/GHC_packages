Description: Rename snap binary
 To avoid a conflict
Author: Joachim Breitner <nomeata@debian.org>
Bug-Debian: http://bugs.debian.org/741503
Forwarded: not-needed

Index: snap-0.13.2.9/snap.cabal
===================================================================
--- snap-0.13.2.9.orig/snap.cabal	2014-12-22 00:29:52.470018812 +0100
+++ snap-0.13.2.9/snap.cabal	2014-12-22 00:29:52.466018732 +0100
@@ -16,7 +16,7 @@
     @$ cabal install snap
     $ mkdir myproject
     $ cd myproject
-    $ snap init@
+    $ snap-framework init@
     .
     If you have trouble or any questions, see our FAQ page
     (<http://snapframework.com/faq>) or the documentation
@@ -215,7 +215,7 @@
     ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
                  -fno-warn-orphans

-Executable snap
+Executable snap-framework
   hs-source-dirs: src
   main-is: Snap/Starter.hs

Index: snap-0.13.2.9/src/Snap/Starter.hs
===================================================================
--- snap-0.13.2.9.orig/src/Snap/Starter.hs	2014-12-22 00:29:52.470018812 +0100
+++ snap-0.13.2.9/src/Snap/Starter.hs	2014-12-22 00:29:52.466018732 +0100
@@ -30,7 +30,7 @@
     , ""
     , "Usage:"
     , ""
-    , "  snap <action>"
+    , "  snap-framework <action>"
     , ""
     , "    <action> can be one of:"
     , "      init - create a new project directory structure in the " ++
@@ -48,7 +48,7 @@
     , ""
     , "Usage:"
     , ""
-    , "  snap init [type]"
+    , "  snap-framework init [type]"
     , ""
     , "    [type] can be one of:"
     , "      default   - A default project using snaplets and heist"
Index: snap-0.13.2.9/test/suite/Snap/TestCommon.hs
===================================================================
--- snap-0.13.2.9.orig/test/suite/Snap/TestCommon.hs	2014-12-22 00:29:52.470018812 +0100
+++ snap-0.13.2.9/test/suite/Snap/TestCommon.hs	2014-12-22 00:29:52.466018732 +0100
@@ -35,7 +35,7 @@

 ------------------------------------------------------------------------------
 testGeneratedProject :: String  -- ^ project name and directory
-                     -> String  -- ^ arguments to @snap init@
+                     -> String  -- ^ arguments to @snap-framework init@
                      -> String  -- ^ arguments to @cabal install@
                      -> Int     -- ^ port to run http server on
                      -> IO ()   -- ^ action to run when the server goes up
@@ -94,11 +94,11 @@
         findSnap = do
             home <- fromEnv "HOME" "."
             p1   <- gimmeIfExists $ snapRoot </> "dist" </> "build"
-                                             </> "snap" </> "snap"
-            p2   <- gimmeIfExists $ home </> ".cabal" </> "bin" </> "snap"
-            p3   <- findExecutable "snap"
+                                             </> "snap-framework" </> "snap-framework"
+            p2   <- gimmeIfExists $ home </> ".cabal" </> "bin" </> "snap-framework"
+            p3   <- findExecutable "snap-framework"

-            return $ fromMaybe (error "couldn't find snap executable")
+            return $ fromMaybe (error "couldn't find snap-framework executable")
                                (getFirst $ mconcat $ map First [p1,p2,p3])

     --------------------------------------------------------------------------
