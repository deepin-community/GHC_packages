Source: haskell-regex-compat-tdfa
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Joachim Breitner <nomeata@debian.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
 libghc-regex-base-dev (>= 0.93),
 libghc-regex-base-prof,
 libghc-regex-tdfa-dev (>= 1.1.0),
 libghc-regex-tdfa-prof,
Build-Depends-Indep: ghc-doc,
 libghc-regex-base-doc,
 libghc-regex-tdfa-doc,
Standards-Version: 3.9.8
Homepage: http://hub.darcs.net/shelarcy/regex-compat-tdfa
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/
Vcs-Git: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git
X-Description: Unicode Support version of Text.Regex, using regex-tdfa
 One module layer over regex-tdfa to replace Text.Regex.
 .
 regex-compat can't use Unicode characters correctly because
 of using regex-posix. This is not good for Unicode users.
 .
 This package provides a modified regex-compat that uses regex-tdfa for solving
 today's problem.

Package: libghc-regex-compat-tdfa-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-regex-compat-tdfa-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-regex-compat-tdfa-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
