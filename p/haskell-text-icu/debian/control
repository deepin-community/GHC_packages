Source: haskell-text-icu
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Clint Adams <clint@debian.org>,
 Ilias Tsitsimpis <iliastsi@debian.org>,
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8.4.3),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-hunit-dev (>= 1.2),
 libghc-quickcheck2-dev (>= 2.4),
 libghc-random-dev,
 libghc-test-framework-dev (>= 0.4),
 libghc-test-framework-hunit-dev (>= 0.2),
 libghc-test-framework-quickcheck2-dev (>= 0.2),
 libicu-dev,
Build-Depends-Indep:
 ghc-doc,
Standards-Version: 4.1.4
Homepage: https://github.com/bos/text-icu
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-text-icu
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-text-icu]

Package: libghc-text-icu-dev
Architecture: any
Depends:
 libicu-dev,
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}

Package: libghc-text-icu-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}

Package: libghc-text-icu-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}
