Source: haskell-text-icu
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>, Dmitry Bogatov <KAction@gnu.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.9),
 cdbs,
 ghc,
 ghc-prof,
 libghc-text-dev (>= 0.9.1.0),
 libghc-text-prof,
 libicu-dev,
 libghc-hunit-dev (>= 1.2),
 libghc-quickcheck2-dev (>= 2.4),
 libghc-random-dev,
 libghc-test-framework-dev (>= 0.4),
 libghc-test-framework-hunit-dev (>= 0.2),
 libghc-test-framework-quickcheck2-dev (>= 0.2),
 libghc-text-dev,
Build-Depends-Indep: ghc-doc,
 libghc-text-doc,
Standards-Version: 3.9.6
Homepage: https://github.com/bos/text-icu
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-text-icu
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-text-icu

Package: libghc-text-icu-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
 libicu-dev,
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}

Package: libghc-text-icu-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}

Package: libghc-text-icu-doc
Architecture: all
Section: doc
Depends: ${misc:Depends},
 ${haskell:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: bindings to the ICU library${haskell:ShortBlurb}
 Haskell bindings to the International Components for Unicode (ICU)
 libraries. These libraries provide robust and full-featured Unicode
 services on a wide variety of platforms.
 .
 Features include:
 .
 Both pure and impure bindings, to allow for fine control over efficiency
 and ease of use.
 .
 Breaking of strings on character, word, sentence, and line boundaries.
 .
 Access to the Unicode Character Database (UCD) of character metadata.
 .
 String collation functions, for locales where the conventions for
 lexicographic ordering differ from the simple numeric ordering of
 character codes.
 .
 Character set conversion functions, allowing conversion between
 Unicode and over 220 character encodings.
 .
 Unicode normalization. (When implementations keep strings in a
 normalized form, they can be assured that equivalent strings have a
 unique binary representation.)
 .
 Regular expression search and replace.
 .
 ${haskell:Blurb}
