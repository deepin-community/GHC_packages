Source: haskell-iospec
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Build-Depends: debhelper (>= 9)
  , cdbs
  , haskell-devscripts (>= 0.8.15)
  , ghc
  , ghc-prof
  , libghc-mtl-dev
  , libghc-mtl-prof
  , libghc-quickcheck2-dev
  , libghc-quickcheck2-prof
  , libghc-stream-dev
  , libghc-stream-prof
Build-Depends-Indep: ghc-doc
  , libghc-mtl-doc
  , libghc-quickcheck2-doc
  , libghc-stream-doc
Standards-Version: 3.9.4
Homepage: http://hackage.haskell.org/package/IOSpec
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-iospec
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-iospec

Package: libghc-iospec-dev
Architecture: any
Depends: ${haskell:Depends}
  , ${shlibs:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 It consists of several modules, that give a pure specification
 of functions in the IO monad:
 .
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}

Package: libghc-iospec-prof
Architecture: any
Depends: ${haskell:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}

Package: libghc-iospec-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${haskell:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}
