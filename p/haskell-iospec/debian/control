Source: haskell-iospec
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Clint Adams <clint@debian.org>,
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8.4.3),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-quickcheck2-dev (<< 3),
 libghc-quickcheck2-dev (>= 2),
 libghc-quickcheck2-prof,
 libghc-stream-dev,
 libghc-stream-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-quickcheck2-doc,
 libghc-stream-doc,
Standards-Version: 4.1.4
Homepage: http://hackage.haskell.org/package/IOSpec
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-iospec
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-iospec]

Package: libghc-iospec-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 It consists of several modules, that give a pure specification
 of functions in the IO monad:
 .
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}

Package: libghc-iospec-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}

Package: libghc-iospec-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: Pure specification of the IO monad${haskell:ShortBlurb}
 Test.IOSpec.Fork: a pure specification of forkIO.
 .
 Test.IOSpec.IORef: a pure specification of most functions that create and
 manipulate on IORefs.
 .
 Test.IOSpec.MVar: a pure specification of most functions that create and
 manipulate and MVars.
 .
 Test.IOSpec.STM: a pure specification of atomically and the STM monad.
 .
 Test.IOSpec.Teletype: a pure specification of getChar, putChar, and
 several related Prelude functions.
 .
 Besides these modules containing the specifications, there are a few other
 important modules:
 .
 Test.IOSpec.Types: defines the IOSpec type and several amenities.
 .
 Test.IOSpec.VirtualMachine: defines a virtual machine on which to execute
 pure specifications.
 .
 Test.IOSpec.Surrogate: a drop-in replacement for the other modules. Import
 this and recompile your code once you've finished testing and debugging.
 .
 There are several well-documented examples included with the source
 distribution.
 .
 ${haskell:Blurb}
