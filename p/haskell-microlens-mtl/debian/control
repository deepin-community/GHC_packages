Source: haskell-microlens-mtl
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Ilias Tsitsimpis <iliastsi@debian.org>
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8.4.3),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-microlens-dev (<< 0.5),
 libghc-microlens-dev (>= 0.4),
 libghc-microlens-prof,
 libghc-transformers-compat-dev (<< 1),
 libghc-transformers-compat-dev (>= 0.4),
 libghc-transformers-compat-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-microlens-doc,
 libghc-transformers-compat-doc,
Standards-Version: 4.6.1
Homepage: http://github.com/monadfix/microlens
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-microlens-mtl
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-microlens-mtl]
X-Description: microlens support for Reader/Writer/State from mtl
 This package contains functions (like 'view' or '+=') which work on
 'MonadReader', 'MonadWriter', and 'MonadState' from the mtl package.
 .
 This package is a part of the microslens family.

Package: libghc-microlens-mtl-dev
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}, ${shlibs:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Provides: ${haskell:Provides}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-microlens-mtl-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Provides: ${haskell:Provides}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-microlens-mtl-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
