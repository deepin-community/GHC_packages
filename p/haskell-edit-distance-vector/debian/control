Source: haskell-edit-distance-vector
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 10),
 haskell-devscripts-minimal | haskell-devscripts (>= 0.13),
 cdbs,
 ghc,
 ghc-prof,
 libghc-vector-dev (>= 0.8),
 libghc-vector-prof,
Build-Depends-Indep: ghc-doc,
 libghc-vector-doc,
Standards-Version: 4.4.0
Homepage: https://github.com/thsutton/edit-distance-vector
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-edit-distance-vector
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git
X-Description: Calculate edit distances and edit scripts between vectors.
 An implementation of the Wagnerâ€“Fischer dynamic programming algorithm to
 find the optimal edit script and cost between two sequences.
 .
 The implementation in this package is specialised to sequences represented
 with "Data.Vector" but is otherwise agnostic to:
 .
 * The type of values in the vectors;
 .
 * The type representing edit operations; and
 .
 * The type representing the cost of operations.

Package: libghc-edit-distance-vector-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-edit-distance-vector-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-edit-distance-vector-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
