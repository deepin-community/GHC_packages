--- darcs-1.0.9.orig/DarcsArguments.lhs
+++ darcs-1.0.9/DarcsArguments.lhs
@@ -904,6 +904,7 @@ edit_file :: String -> IO ExitCode
 edit_file f = do
   ed <- get_editor
   exec_interactive ed [f]
+             `ortryrunning` exec_interactive "vi" [f]
              `ortryrunning` exec_interactive "emacs" [f]
              `ortryrunning` exec_interactive "emacs" ["-nw",f]
              `ortryrunning` exec_interactive "nano" [f]
@@ -911,7 +912,7 @@ get_editor :: IO String
 get_editor = getEnv "DARCS_EDITOR" `catchall`
              getEnv "DARCSEDITOR" `catchall`
              getEnv "VISUAL" `catchall`
-             getEnv "EDITOR" `catchall` return "vi"
+             getEnv "EDITOR" `catchall` return "sensible-editor"
 \end{code}

 \begin{code}
@@ -919,10 +920,11 @@ view_file :: String -> IO ExitCode
 view_file f = do
   viewer <- get_viewer
   exec_interactive viewer [f]
+             `ortryrunning` exec_interactive "less" [f]
              `ortryrunning` exec_interactive "more" [f]
 get_viewer :: IO String
 get_viewer = getEnv "DARCS_PAGER" `catchall`
-             getEnv "PAGER" `catchall` return "less"
+             getEnv "PAGER" `catchall` return "pager"
 \end{code}

 \begin{code}
--- darcs-1.0.9.orig/configure.ac
+++ darcs-1.0.9/configure.ac
@@ -281,7 +281,7 @@ if test "$with_docs" = "yes"; then
		fi
	else
		TARGETS="$TARGETS manual/index.html"
-		MAKEMANUAL="cd manual && $HTLATEX ../darcs.tex && ln -sf darcs.html index.html"
+		MAKEMANUAL="cd manual && TEX4HTENV=/etc/tex4ht/tex4ht.env $HTLATEX ../darcs.tex && ln -sf darcs.html index.html"
	fi
	else
	TARGETS="$TARGETS manual/index.html"
--- darcs-1.0.9.orig/configure
+++ darcs-1.0.9/configure
@@ -871,6 +871,12 @@ do
   | --ht=*)
     htmldir=$ac_optarg ;;

+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
   -includedir | --includedir | --includedi | --included | --include \
   | --includ | --inclu | --incl | --inc)
     ac_prev=includedir ;;
@@ -979,6 +985,16 @@ do
   -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
     psdir=$ac_optarg ;;

+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
   -q | -quiet | --quiet | --quie | --qui | --qu | --q \
   | -silent | --silent | --silen | --sile | --sil)
     silent=yes ;;
@@ -1644,6 +1660,7 @@ echo "$as_me: loading site script $ac_si
     . "$ac_site_file"
   fi
 done
+IFS=$as_save_IFS

 if test -r "$cache_file"; then
   # Some versions of bash will fail to source /dev/null (special
@@ -2957,12 +2974,6 @@ See \`config.log' for more details." >&2
    { (exit 1); exit 1; }; }
 fi

-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
-


 ac_aux_dir=
@@ -3635,6 +3646,7 @@ esac
     $ac_path_GREP_found && break 3
   done
 done
+IFS=$as_save_IFS

 done
 IFS=$as_save_IFS
@@ -5873,7 +5885,7 @@ echo "$as_me: WARNING: Cannot find hevea
		fi
	else
		TARGETS="$TARGETS manual/index.html"
-		MAKEMANUAL="cd manual && $HTLATEX ../darcs.tex && ln -sf darcs.html index.html"
+		MAKEMANUAL="cd manual && TEX4HTENV=/etc/tex4ht/tex4ht.env $HTLATEX ../darcs.tex && ln -sf darcs.html index.html"
	fi
	else
	TARGETS="$TARGETS manual/index.html"
--- darcs-1.0.9.orig/GNUmakefile
+++ darcs-1.0.9/GNUmakefile
@@ -147,6 +147,9 @@ installserver:	cgi/darcs.cgi
		$(INSTALL) -d $(DESTDIR)$(datadir)/darcs/xslt
	$(INSTALL_DATA) cgi/xslt/*.xslt $(DESTDIR)$(datadir)/darcs/xslt/
	$(INSTALL_DATA) cgi/xslt/styles.css $(DESTDIR)$(datadir)/darcs/xslt/styles.css
+	test -d $(DESTDIR)$(datadir)/doc/darcs-server || \
+		$(INSTALL) -d $(DESTDIR)$(datadir)/doc/darcs-server
+	$(INSTALL_DATA) cgi/README $(DESTDIR)$(datadir)/doc/darcs-server/README

 # Debian policy doesn't allow symlinks as configuration files.
 #	test -e $(DESTDIR)$(sysconfdir)/darcs/styles.css || \
--- /dev/null
+++ darcs-1.0.9/semantic.cache
@@ -0,0 +1,15 @@
+;; Object darcs-1.0.5/
+;; SEMANTICDB Tags save file
+(semanticdb-project-database-file "darcs-1.0.5/"
+  :tables (list
+   (semanticdb-table "GNUmakefile"
+    :major-mode 'makefile-mode
+    :tags '(("autoconf.mk" include nil nil [94 114]) ("GHCFLAGS" variable (:default-value ("+RTS" "$(RTSFLAGS)" "-RTS")) nil [148 182]) ("GHCFLAGS" variable (:default-value ("-Wall" "-Werror" "-I.")) nil [189 219]) ("GHCFLAGS_Record.o" variable (:default-value ("$(filter-out -auto-all,$(GHCFLAGS))")) nil [219 275]) ("GHCFLAGS_SelectChanges.o" variable (:default-value ("$(filter-out -auto-all,$(GHCFLAGS))")) nil [275 338]) ("GHCFLAGS_SHA1.o" variable (:default-value ("$(GHCFLAGS)" "-no-auto-all" "-funfolding-use-threshold20")) nil [338 409]) ("GHCFLAGS_Context.o" variable (:default-value ("$(filter-out -cpp,$(GHCFLAGS))")) nil [409 461]) ("COMMON_FILES" variable (:default-value ("Autoconf.lhs" "CheckFileSystem.lhs" "ColourPrinter.lhs" "Curl.hs" "DarcsIO.lhs" "Pristine.lhs" "DarcsArguments.lhs" "DarcsFlags.lhs" "DarcsUtils.lhs" "CommandLine.lhs" "DateMatcher.lhs" "Depends.lhs" "Diff.lhs" "Exec.lhs" "External.hs" "FastPackedString.hs" "FileName.lhs" "FilePathMonad.lhs" "FilePathUtils.hs" "IsoDate.lhs" "Lcs.lhs" "Lock.lhs" "Map.hs" "Match.lhs" "Motd.lhs" "Patch.lhs" "PatchApply.lhs" "PatchBundle.lhs" "PatchCheck.lhs" "PatchChoices.lhs" "PatchCommute.lhs" "PatchCore.lhs" "PatchInfo.lhs" "PatchMatch.lhs" "PatchMatchData.lhs" "PatchRead.lhs" "PatchReadMonads.hs" "PatchShow.lhs" "PatchViewing.lhs" "Population.lhs" "PopulationData.lhs" "PrintPatch.lhs" "Printer.lhs" "RegChars.lhs" "RepoFormat.lhs" "RepoPrefs.lhs" "RepoTypes.lhs" "DarcsRepo.lhs" "Repository.lhs" "Resolution.lhs" "SHA1.lhs" "SignalHandler.lhs" "SlurpDirectory.lhs" "Stringalike.hs" "Test.lhs" "ThisVersion.lhs" "UTF8.lhs" "Workaround.hs" "FileSystem.hs" "AtExit.lhs" "$(GIT_SRCS)")) nil [462 1426]) ("DARCS_FILES" variable (:default-value ("$(COMMON_FILES)" "Add.lhs" "AmendRecord.lhs" "Annotate.lhs" "Apply.lhs" "ArgumentDefaults.lhs" "Changes.lhs" "Check.lhs" "Context.hs" "DarcsCommands.lhs" "DarcsURL.hs" "DiffCommand.lhs" "Dist.lhs" "Email.hs" "Get.lhs" "Init.lhs" "Mv.lhs" "Optimize.lhs" "Pull.lhs" "Push.lhs" "Put.lhs" "Query.lhs" "QueryManifest.lhs" "Record.lhs" "RemoteApply.lhs" "Remove.lhs" "Repair.lhs" "Replace.lhs" "Resolve.lhs" "Revert.lhs" "Rollback.lhs" "SelectChanges.lhs" "Send.lhs" "SetPref.lhs" "Tag.lhs" "TheCommands.lhs" "TouchesFiles.lhs" "TrackDown.lhs" "Unrecord.lhs" "Unrevert.lhs" "WhatsNew.lhs")) nil [1427 1977]) ("UNIT_FILES" variable (:default-value ("$(DARCS_FILES)" "PatchTest.lhs")) nil [1978 2021]) ("CREATEREPO_FILES" variable (:default-value ("DarcsUtils.lhs" "Workaround.hs" "ThisVersion.lhs" "Autoconf.lhs" "Printer.lhs" "FastPackedString.hs" "fpstring.o" "rts.o")) nil [2022 2165]) ("C_OBJS" variable (:default-value ("compat.o" "fpstring.o" "$(GIT_C_OBJS)")) nil [2166 2210]) ("GHCFLAGS" variable (:default-value ("-iwin32" "-Iwin32" "-DWIN32")) nil [2234 2270]) ("DARCS_FILES" variable (:default-value ("win32/System/Posix.hs" "win32/CtrlC.hs")) nil [2270 2322]) ("C_OBJS" variable (:default-value ("win32/CtrlC_stub.o" "win32/CtrlC.o")) nil [2322 2365]) ("UNIT_FILES" variable (:default-value ("win32/System/Posix.hs")) nil [2365 2401]) ("CREATEREPO_FILES" variable (:default-value ("win32/System/Posix.hs")) nil [2401 2443]) ("GHCFLAGS" variable (:default-value ("-DHAVE_CURSES")) nil [2477 2503]) ("C_OBJS" variable (:default-value ("win32/send_email.o")) nil [2535 2564]) ("CPPFLAGS" variable (:default-value ("-Iwin32")) nil [2564 2584]) ("GHCFLAGS" variable (:default-value ("-lmapi32" "-DHAVE_MAPI")) nil [2584 2617]) ("C_OBJS" variable (:default-value ("hscurl.o")) nil [2652 2671]) ("GHCFLAGS" variable (:default-value ("-DHAVE_CURL")) nil [2671 2695]) ("DARCS_OBJS" variable (:default-value ("$(patsubst %.hs,%.o,$(patsubst %.lhs,%.o,$(DARCS_FILES)))")) nil [2702 2774]) ("UNIT_OBJS" variable (:default-value ("$(patsubst %.hs,%.o,$(patsubst %.lhs,%.o,$(UNIT_FILES)))")) nil [2774 2844]) ("CREATEREPO_OBJS" variable (:default-value ("$(patsubst %.hs,%.o,$(patsubst %.lhs,%.o,$(CREATEREPO_FILES)))")) nil [2844 2926]) (".PHONY" function (:arguments ("all" "clean" "distclean" "realclean" "dist" "deb" "test" "check" "install" "installserver" "installdocs" "installbin" "windowsinstaller" "website" "slowtest")) nil [2927 3074]) ("config" function (:arguments ("configure" "autoconf.mk")) nil [3074 3105]) ("installbin" function (:arguments ("all")) nil [3105 3229]) ("installdocs" function (:arguments ("darcs.ps" "manual/index.html")) nil [3564 3836]) ("installserver" function (:arguments ("darcs-createrepo" "cgi/darcs.cgi")) nil [4105 4248]) ("PREDIST_COPY_FILES" variable (:default-value ("ChangeLog" "AUTHORS" "RELEASE_STATE" "Context.hs")) nil [5288 5365]) ("dist" function (:arguments ("darcs" "$(PREDIST_COPY_FILES)")) nil [5366 5526]) ("predist_copy" function nil nil [5526 5619]) ("predist" function (:arguments ("predist_copy" "darcs.ps" "darcs.1" "manual/index.html" "distclean")) nil [5619 5702]) ("deb" function (:arguments ("darcs")) nil [5702 5940]) ("windowsinstaller" function (:arguments ("darcs" "manual/index.html" "darcs.nsi")) nil [5940 6104]) ("darcs" function (:arguments ("$(DARCS_OBJS)" "darcs.lhs" "$(C_OBJS)" "rts.o")) nil [6104 6243]) ("ghci" function (:arguments ("$(DARCS_FILES)" "$(C_OBJS)")) nil [6243 6353]) (".PHONY" function (:arguments ("ghci")) nil [6347 6361]) ("darcsman" function (:arguments ("darcsman.hs" "$(C_OBJS)" "$(DARCS_OBJS)")) nil [6361 6420]) ("list_authors" function (:arguments ("list_authors.hs" "$(C_OBJS)" "$(DARCS_OBJS)")) nil [6408 6476]) ("make_changelog" function (:arguments ("make_changelog.hs" "$(C_OBJS)" "$(DARCS_OBJS)")) nil [6462 6536]) ("darcs-createrepo" function (:arguments ("darcs-createrepo.lhs" "$(CREATEREPO_OBJS)")) nil [6520 6582]) ("unit" function (:arguments ("unit.lhs" "$(UNIT_OBJS)" "rts.o" "$(C_OBJS)")) nil [6578 6631]) ("preproc" function (:arguments ("preproc.hs" "$(C_OBJS)" "$(DARCS_OBJS)")) nil [6624 6670]) ("TEXSOURCES" variable (:default-value ("preproc" "darcs.lhs" "features.tex" "switching.tex" "configuring_darcs.tex" "gpl.tex" "darcs-createrepo.lhs" "$(DARCS_FILES)" "building_darcs.tex" "best_practices.tex")) nil [6670 6842]) ("darcs.tex" function (:arguments ("$(TEXSOURCES)")) nil [6842 6930]) ("darcs_print.tex" function (:arguments ("$(TEXSOURCES)")) nil [6915 6986]) ("website" function (:arguments ("darcs-stable.tar.gz" "darcs.ps" "manual/index.html" "manual/bigpage.html" "darcs" "index.html")) nil [6986 7083]) ("manual/index.html" function (:arguments ("darcs.tex" "gpl.tex" "darcs.css")) nil [7083 7180]) ("manual/bigpage.html" function (:arguments ("darcs.tex" "gpl.tex" "darcs.css")) nil [7180 7408]) ("index.html" function (:arguments ("index.html.in" "config.status")) nil [7408 7493]) ("darcs.ps" function (:arguments ("darcs_print.ps")) nil [7493 7547]) ("darcs.1" function (:arguments ("darcsman")) nil [7547 7588]) ("AUTHORS" function (:arguments ("list_authors")) nil [7588 7637]) ("ChangeLog" function (:arguments ("make_changelog" "changelog.in/ChangeLog.old" "$(wildcard changelog.in/entries/*)")) nil [7637 7917]) ("slowtest" function (:arguments ("test" "test_unit")) nil [7917 7943]) ("test" function (:arguments ("test_coding_standards" "test_perl" "test_shell" "unit")) nil [7943 8007]) ("check" function (:arguments ("test_coding_standards" "test_perl" "test_shell" "unit")) nil [7943 8007]) ("test_perl" function (:arguments ("darcs")) nil [8007 8066]) ("test_unit" function (:arguments ("darcs" "unit")) nil [8067 8102]) ("test_shell" function (:arguments ("darcs")) nil [8102 8162]) ("test_coding_standards" function (:arguments ("test_coding_standards_haskell_without_tabs")) nil [8162 8229]) ("test_coding_standards_haskell_without_tabs" function nil nil [8229 8388]) ("clean" function nil nil [8388 8502]) ("distclean" function (:arguments ("clean")) nil [8808 9045]) ("realclean" function (:arguments ("distclean")) nil [9045 9251]) ("configure" function (:arguments ("configure.ac" "aclocal.m4")) nil [9251 9298]) ("autoconf.mk" function (:arguments ("config.status" "autoconf.mk.in" "Autoconf.lhs.in" "cgi/darcs.cgi.in")) nil [9298 9424]) ("Autoconf.lhs" function (:arguments ("config.status" "autoconf.mk.in" "Autoconf.lhs.in" "cgi/darcs.cgi.in")) nil [9298 9424]) ("config.status" function (:arguments ("configure")) nil [9424 9630]) (".depend" function (:arguments ("$(DARCS_FILES)" "$(UNIT_FILES)")) nil [9630 9753]) (".depend" function (:arguments ("autoconf.mk")) nil [9753 9775]) (".depend" include nil nil [9850 9866]))
+    :file "GNUmakefile"
+    :pointmax 9879
+    )
+   )
+  :file "semantic.cache"
+  :semantic-tag-version "2.0pre3"
+  :semanticdb-version "2.0pre3"
+  )
