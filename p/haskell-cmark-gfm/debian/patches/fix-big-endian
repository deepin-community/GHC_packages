Description: Use correct type for C enumerations
 The storage type of an enum can be any integer type big enough to cover
 the required range. Use the '#type' keyword of c2hs to derive the
 correct storage type for the cmark_node_type enumeration.
 .
 Note that the previous use of CUShort produced incorrect results in big
 endian architectures where 'sizeof(cmark_node_type) > sizeof(CUShort)'.
Author: Ilias Tsitsimpis <iliastsi@debian.org>
Bug: https://github.com/kivikakk/cmark-gfm-hs/issues/6
Bug-Debian: https://bugs.debian.org/897001

Index: b/CMarkGFM.hsc
===================================================================
--- a/CMarkGFM.hsc
+++ b/CMarkGFM.hsc
@@ -640,16 +640,16 @@ foreign import ccall "cmark_extension_ap
     c_cmark_parser_attach_syntax_extension :: ParserPtr -> ExtensionPtr -> IO ()
 
 foreign import ccall "strikethrough.h &CMARK_NODE_STRIKETHROUGH"
-    c_CMARK_NODE_STRIKETHROUGH :: Ptr CUShort
+    c_CMARK_NODE_STRIKETHROUGH :: Ptr #type cmark_node_type
 
 foreign import ccall "table.h &CMARK_NODE_TABLE"
-    c_CMARK_NODE_TABLE :: Ptr CUShort
+    c_CMARK_NODE_TABLE :: Ptr #type cmark_node_type
 
 foreign import ccall "table.h &CMARK_NODE_TABLE_ROW"
-    c_CMARK_NODE_TABLE_ROW :: Ptr CUShort
+    c_CMARK_NODE_TABLE_ROW :: Ptr #type cmark_node_type
 
 foreign import ccall "table.h &CMARK_NODE_TABLE_CELL"
-    c_CMARK_NODE_TABLE_CELL :: Ptr CUShort
+    c_CMARK_NODE_TABLE_CELL :: Ptr #type cmark_node_type
 
 foreign import ccall "core-extensions.h cmarkextensions_get_table_columns"
     c_cmarkextensions_get_table_columns :: NodePtr -> IO CUShort
