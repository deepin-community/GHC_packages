Source: haskell-map-syntax
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Joachim Breitner <nomeata@debian.org>,
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8.4.3),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-hunit-dev (>= 1.2),
 libghc-hunit-dev (<< 2),
 libghc-quickcheck2-dev (>= 2.3.0.2),
 libghc-quickcheck2-dev (<< 3),
 libghc-hspec-dev (>= 2.2.3),
 libghc-hspec-dev (<< 2.8),
Build-Depends-Indep: ghc-doc,
Standards-Version: 4.5.0
Homepage: https://hackage.haskell.org/package/map-syntax
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-map-syntax
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-map-syntax]
X-Description: syntax sugar for defining maps
 Haskell's canonical list of tuples syntax for defining maps is not very
 convenient and also has ambiguous semantics.  This package leverages do
 notation to create a lighter syntax that makes semantics explicit and also
 allows the option of fail-fast handling of duplicate keys.

Package: libghc-map-syntax-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-map-syntax-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-map-syntax-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
