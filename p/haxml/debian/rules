#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Include dpatch
include /usr/share/dpatch/dpatch.make

# This has to be exported to make some magic below work.
export DH_OPTIONS

# Handle noopt in DEB_BUILD_OPTIONS
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
  MAKE_ENVVARS := HCFLAGS=-O0
else
  MAKE_ENVVARS := HCFLAGS=-O1
endif

GHC6_VERSION  := $(shell /usr/bin/ghc6 --numeric-version)
GHC6_LIBDIR   := $(shell ghc6 --print-libdir)

# Does ghc-pkg6 use cabal
PKG_CABAL     := $(shell if ghc-pkg6 list > /dev/null 2>&1; then (echo yes) ; else (echo no) ; fi)
PKG_CONFIG    := debian/libghc6-haxml-dev/$(GHC6_LIBDIR)/package.conflets/HaXml.package.conf

# CC options
CPP_FLAGS     := $(shell grep "^cc-options:" HaXml.cabal | cut -f2 -d":")
CPP           := cpp -P -traditional $(CPP_FLAGS)

configure: configure-stamp
configure-stamp: patch-stamp
	dh_testdir
	html2text -nobs docs/changelog.html > changelog
	sed -e 's%@GHC6_LIBDIR@%$(GHC6_LIBDIR)%g' \
	    debian/libghc6-haxml-dev.install.in > \
	    debian/libghc6-haxml-dev.install
	# configure script is not generated by autoconf,
	# --build and --host are not supported/needed.
	chmod +x ./configure
	./configure --prefix=/usr/bin
	touch $@

build: build-arch

build-arch: build-arch-stamp
build-arch-stamp: configure-stamp
	$(MAKE_ENVVARS) $(MAKE)
	touch $@

build-indep: build-indep-stamp
build-indep-stamp: configure-stamp
	$(MAKE) haddock CPP="$(CPP)"
	touch $@

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp configure-stamp
	$(MAKE) realclean
	rm -rf obj docs/HaXml
	rm -f changelog debian/libghc6-haxml-dev.install
	dh_clean

install: build-arch-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	mkdir -p debian/tmp/usr/bin
	mkdir -p debian/tmp/usr/lib/hugs
	$(MAKE) install-filesonly DESTDIR="$(CURDIR)/debian/tmp" CPP="$(CPP)"
ifneq (,$(findstring libghc6-haxml-dev,$(shell dh_listpackages -s)))
ifeq (,$(findstring no,$(PKG_CABAL)))
	$(MAKE) -C obj/ghc HaXml.pkgconf
	install --mode=644 -D obj/ghc/HaXml.pkgconf $(PKG_CONFIG)
	# remove info about executables which makes ghc-pkg barf
	# and remove empty lines.
	sed -i -e "s/^[A-Z].*//g" -e "/^$$/d" $(PKG_CONFIG)
	# expose package
	echo "exposed: True" >> $(PKG_CONFIG)
else
	install --mode=644 -D obj/ghc/pkg.conf $(PKG_CONFIG)
endif
endif
	install --mode=644 -D debian/libhugs-haxml.linda-overrides \
	    debian/libhugs-haxml/usr/share/linda/overrides/libhugs-haxml
	install --mode=644 -D debian/haxml-doc.linda-overrides \
	    debian/haxml-doc/usr/share/linda/overrides/haxml-doc

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_install
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_installman
	dh_link
	dh_strip
	dh_compress -X.hs -X .mod -X .dtd -X LICENCE-GPL -X LICENCE-LGPL
	dh_link
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	sh -e debian/mk-haskell-depends $(PKG_CONFIG)
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture independant packages using the common target.
binary-indep: build-indep-stamp install
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch-stamp install
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: configure build build-arch build-indep clean clean-patched binary-indep binary-arch binary install
