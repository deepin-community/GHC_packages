Source: haskell-test-framework-th
Priority: extra
Section: haskell
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Kiwamu Okabe <kiwamu@debian.or.jp>
Build-Depends: debhelper (>= 7.0),
 haskell-devscripts (>= 0.8.13),
 cdbs,
 ghc,
 ghc-prof,
 ghc-ghci,
 libghc-src-exts-dev,
 libghc-src-exts-prof,
 libghc-language-haskell-extract-dev (>= 0.2.1),
 libghc-language-haskell-extract-prof,
 libghc-regex-posix-dev,
 libghc-regex-posix-prof,
 libghc-test-framework-dev,
 libghc-test-framework-prof
Build-Depends-Indep: ghc-doc,
 libghc-src-exts-doc,
 libghc-language-haskell-extract-doc,
 libghc-regex-posix-doc,
 libghc-test-framework-doc
Standards-Version: 3.9.3
Homepage: http://github.com/finnsson/test-generator
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-test-framework-th
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-test-framework-th
DM-Upload-Allowed: yes

Package: libghc-test-framework-th-dev
Architecture: any
Depends: ${shlibs:Depends},
         ${haskell:Depends},
         ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Automagically generate the {HUnit,Quickcheck}-bulk-code
 test-framework-th contains two interesting functions:
 defaultMainGenerator and testGroupGenerator.
 .
 defaultMainGenerator will extract all functions beginning with
 "case_" or "prop_" in the module and put them in a testGroup.
 .
 testGroupGenerator is like defaultMainGenerator but without defaultMain.
 It is useful if you need a function for the testgroup
 (e.g. if you want to be able to call the testgroup from another module).
 .
 This package contains the normal library files.

Package: libghc-test-framework-th-prof
Architecture: any
Depends: ${haskell:Depends},
         ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Automagically generate the {HUnit,Quickcheck}-bulk-code; profiling libraries
 test-framework-th contains two interesting functions:
 defaultMainGenerator and testGroupGenerator.
 .
 defaultMainGenerator will extract all functions beginning with
 "case_" or "prop_" in the module and put them in a testGroup.
 .
 testGroupGenerator is like defaultMainGenerator but without defaultMain.
 It is useful if you need a function for the testgroup
 (e.g. if you want to be able to call the testgroup from another module).
 .
 This package contains the libraries compiled with profiling enabled.

Package: libghc-test-framework-th-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
         ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Automagically generate the {HUnit,Quickcheck}-bulk-code; documentation
 test-framework-th contains two interesting functions:
 defaultMainGenerator and testGroupGenerator.
 .
 defaultMainGenerator will extract all functions beginning with
 "case_" or "prop_" in the module and put them in a testGroup.
 .
 testGroupGenerator is like defaultMainGenerator but without defaultMain.
 It is useful if you need a function for the testgroup
 (e.g. if you want to be able to call the testgroup from another module).
 .
 This package contains the documentation files.
