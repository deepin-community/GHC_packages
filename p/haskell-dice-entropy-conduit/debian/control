Source: haskell-dice-entropy-conduit
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Sean Whitton <spwhitton@spwhitton.name>,
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-conduit-dev (>= 1.1.7),
 libghc-conduit-prof,
 libghc-entropy-dev (>= 0.3.2),
 libghc-entropy-prof,
 libghc-test-framework-dev,
 libghc-test-framework-quickcheck2-dev,
Build-Depends-Indep:
 ghc-doc,
 libghc-conduit-doc,
 libghc-entropy-doc,
Standards-Version: 4.6.1
Homepage: https://github.com/pwrobinson/dice-entropy-conduit#readme
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-dice-entropy-conduit
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-dice-entropy-conduit]
X-Description: secure n-sided dice rolls and random sampling
 Haskll library providing cryptographically secure n-sided dice rolls,
 and random sampling within a given range.  The technique of rejection
 sampling is used to obtain the random data.  The number of random
 bits used is close to the optimal bound, information-theoretically
 speaking.

Package: libghc-dice-entropy-conduit-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-dice-entropy-conduit-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-dice-entropy-conduit-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Conflicts:
 ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
