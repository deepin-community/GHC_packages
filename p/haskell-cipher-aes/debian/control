Source: haskell-cipher-aes
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Build-Depends: debhelper (>= 9)
  , cdbs
  , haskell-devscripts (>= 0.8.15)
  , ghc
  , ghc-prof
  , libghc-byteable-dev
  , libghc-byteable-prof
  , libghc-securemem-dev (>= 0.1.2)
  , libghc-securemem-prof
  , libghc-crypto-cipher-types-dev  (>= 0.0.6)
  , libghc-crypto-cipher-types-dev  (<< 0.1)
  , libghc-crypto-cipher-types-prof
  , libghc-crypto-cipher-tests-dev  (>> 0.0.8)
  , libghc-quickcheck2-dev
  , libghc-test-framework-dev (>= 0.3.3)
  , libghc-test-framework-quickcheck2-dev (>= 0.2.9)
Build-Depends-Indep: ghc-doc
  , libghc-crypto-cipher-types-doc
  , libghc-byteable-doc
  , libghc-securemem-doc
Standards-Version: 3.9.5
Homepage: http://hackage.haskell.org/package/cipher-aes
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-cipher-aes
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-cipher-aes

Package: libghc-cipher-aes-dev
Architecture: any
Depends: ${haskell:Depends}
  , ${shlibs:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: fast AES cipher implementation with advanced mode of operations${haskell:ShortBlurb}
 Fast AES cipher implementation with advanced mode of operations.
 .
 The modes of operations available are ECB (Electronic code book),
 CBC (Cipher block chaining), CTR (Counter), XTS (XEX with ciphertext
 stealing), GCM (Galois Counter Mode).
 .
 The AES implementation uses AES-NI when available (on x86 and x86-64
 architecture), but fallback gracefully to a software C implementation.
 .
 The software implementation uses S-Boxes, which might suffer for cache
 timing issues.  However do note that most other known software
 implementations, including very popular one (openssl, gnutls) also uses
 same implementation. If it matters for your case, you should make sure
 you have AES-NI available, or you'll need to use a different
 implementation.
 .
 ${haskell:Blurb}

Package: libghc-cipher-aes-prof
Architecture: any
Depends: ${haskell:Depends}
  , ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: fast AES cipher implementation with advanced mode${haskell:ShortBlurb}
 Fast AES cipher implementation with advanced mode of operations.
 .
 The modes of operations available are ECB (Electronic code book),
 CBC (Cipher block chaining), CTR (Counter), XTS (XEX with ciphertext
 stealing), GCM (Galois Counter Mode).
 .
 The AES implementation uses AES-NI when available (on x86 and x86-64
 architecture), but fallback gracefully to a software C implementation.
 .
 The software implementation uses S-Boxes, which might suffer for cache
 timing issues.  However do note that most other known software
 implementations, including very popular one (openssl, gnutls) also uses
 same implementation. If it matters for your case, you should make sure
 you have AES-NI available, or you'll need to use a different
 implementation.
 .
 ${haskell:Blurb}

Package: libghc-cipher-aes-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${haskell:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: fast AES cipher implementation with advanced mode${haskell:ShortBlurb}
 Fast AES cipher implementation with advanced mode of operations.
 .
 The modes of operations available are ECB (Electronic code book),
 CBC (Cipher block chaining), CTR (Counter), XTS (XEX with ciphertext
 stealing), GCM (Galois Counter Mode).
 .
 The AES implementation uses AES-NI when available (on x86 and x86-64
 architecture), but fallback gracefully to a software C implementation.
 .
 The software implementation uses S-Boxes, which might suffer for cache
 timing issues.  However do note that most other known software
 implementations, including very popular one (openssl, gnutls) also uses
 same implementation. If it matters for your case, you should make sure
 you have AES-NI available, or you'll need to use a different
 implementation.
 .
 ${haskell:Blurb}
