Source: haskell-vault
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Clint Adams <clint@debian.org>,
Priority: optional
Section: haskell
Build-Depends:
 cdbs,
 debhelper (>= 9),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-hashable-dev (<< 1.3),
 libghc-hashable-dev (>= 1.1.2.5),
 libghc-hashable-prof,
 libghc-unordered-containers-dev (<< 0.3),
 libghc-unordered-containers-dev (>= 0.2.3.0),
 libghc-unordered-containers-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-hashable-doc,
 libghc-unordered-containers-doc,
Standards-Version: 4.1.1
Homepage: https://github.com/HeinrichApfelmus/vault
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-vault
Vcs-Git: https://anonscm.debian.org/git/pkg-haskell/DHG_packages.git

Package: libghc-vault-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: typed, persistent store for values of arbitrary types${haskell:ShortBlurb}
 A vault is a typed, persistent store for values of arbitrary types. It's
 like having first-class access to the storage space behind IORefs.
 .
 The data structure is analogous to a bank vault, where you can access
 different bank boxes with different keys; hence the name.
 .
 ${haskell:Blurb}

Package: libghc-vault-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: typed, persistent store for values of arbitrary types${haskell:ShortBlurb}
 A vault is a typed, persistent store for values of arbitrary types. It's
 like having first-class access to the storage space behind IORefs.
 .
 The data structure is analogous to a bank vault, where you can access
 different bank boxes with different keys; hence the name.
 .
 ${haskell:Blurb}

Package: libghc-vault-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: typed, persistent store for values of arbitrary types${haskell:ShortBlurb}
 A vault is a typed, persistent store for values of arbitrary types. It's
 like having first-class access to the storage space behind IORefs.
 .
 The data structure is analogous to a bank vault, where you can access
 different bank boxes with different keys; hence the name.
 .
 ${haskell:Blurb}
