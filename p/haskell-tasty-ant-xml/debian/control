Source: haskell-tasty-ant-xml
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Scott Talbert <swt@techie.net>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 10),
 haskell-devscripts-minimal | haskell-devscripts (>= 0.13),
 cdbs,
 ghc,
 ghc-prof,
 libghc-generic-deriving-dev (>= 1.6.2),
 libghc-generic-deriving-prof,
 libghc-tagged-dev (>= 0.7),
 libghc-tagged-prof,
 libghc-tasty-dev (>= 1.4),
 libghc-tasty-dev (<< 1.5),
 libghc-tasty-prof,
 libghc-xml-dev (>= 1.3.13),
 libghc-xml-prof,
Build-Depends-Indep: ghc-doc,
 libghc-generic-deriving-doc,
 libghc-tagged-doc,
 libghc-tasty-doc,
 libghc-xml-doc,
Standards-Version: 4.6.1
Homepage: https://github.com/ocharles/tasty-ant-xml
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-tasty-ant-xml
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-tasty-ant-xml]
X-Description: Render tasty output to XML for Jenkins
 A tasty ingredient to output test results in XML, using the Ant schema. This
 XML can be consumed by the Jenkins continuous integration framework.

Package: libghc-tasty-ant-xml-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-tasty-ant-xml-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-tasty-ant-xml-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
