From 7eae0e500fb5762a2f09939a43fcbb8f6e4ef8af Mon Sep 17 00:00:00 2001
From: Joey Hess <joey@kitenet.net>
Date: Tue, 15 Oct 2013 10:03:28 -0400
Subject: [PATCH 3/3] guard ANNotations

---
 src/Control/Exception/Lens.hs       | 2 ++
 src/Control/Lens.hs                 | 2 ++
 src/Control/Lens/Equality.hs        | 3 +++
 src/Control/Lens/Fold.hs            | 2 ++
 src/Control/Lens/Internal.hs        | 3 +++
 src/Control/Lens/Internal/Zipper.hs | 2 ++
 src/Control/Lens/Iso.hs             | 2 ++
 src/Control/Lens/Lens.hs            | 2 ++
 src/Control/Lens/Operators.hs       | 3 +++
 src/Control/Lens/Plated.hs          | 2 ++
 src/Control/Lens/Prism.hs           | 2 ++
 src/Control/Lens/Setter.hs          | 2 ++
 src/Control/Lens/TH.hs              | 2 ++
 src/Data/Data/Lens.hs               | 2 ++
 14 files changed, 31 insertions(+)

diff --git a/src/Control/Exception/Lens.hs b/src/Control/Exception/Lens.hs
index 4bc3926..13b7beb 100644
--- a/src/Control/Exception/Lens.hs
+++ b/src/Control/Exception/Lens.hs
@@ -112,7 +112,9 @@ import Prelude
   ,  Maybe(..), Either(..), Functor(..), String, IO
   )

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use Control.Exception.catch" #-}
+#endif

 -- $setup
 -- >>> :set -XNoOverloadedStrings
diff --git a/src/Control/Lens.hs b/src/Control/Lens.hs
index 242c3c1..c53e6f6 100644
--- a/src/Control/Lens.hs
+++ b/src/Control/Lens.hs
@@ -99,4 +99,6 @@ import Control.Lens.Wrapped
 import Control.Lens.Zipper
 import Control.Lens.Zoom

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use import/export shortcut" #-}
+#endif
diff --git a/src/Control/Lens/Equality.hs b/src/Control/Lens/Equality.hs
index 982c2d7..b06d4b5 100644
--- a/src/Control/Lens/Equality.hs
+++ b/src/Control/Lens/Equality.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE GADTs #-}
 {-# LANGUAGE Rank2Types #-}
 {-# LANGUAGE TypeFamilies #-}
@@ -28,8 +29,10 @@ module Control.Lens.Equality
 import Control.Lens.Internal.Setter
 import Control.Lens.Type

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use id" #-}
 {-# ANN module "HLint: ignore Eta reduce" #-}
+#endif

 -- $setup
 -- >>> import Control.Lens
diff --git a/src/Control/Lens/Fold.hs b/src/Control/Lens/Fold.hs
index 32a4073..459f959 100644
--- a/src/Control/Lens/Fold.hs
+++ b/src/Control/Lens/Fold.hs
@@ -163,9 +163,11 @@ import Data.Traversable
 -- >>> let g :: Expr -> Expr; g = Debug.SimpleReflect.Vars.g
 -- >>> let timingOut :: NFData a => a -> IO a; timingOut = fmap (fromMaybe (error "timeout")) . timeout (5*10^6) . evaluate . force

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Eta reduce" #-}
 {-# ANN module "HLint: ignore Use camelCase" #-}
 {-# ANN module "HLint: ignore Use curry" #-}
+#endif

 infixl 8 ^.., ^?, ^?!, ^@.., ^@?, ^@?!

diff --git a/src/Control/Lens/Internal.hs b/src/Control/Lens/Internal.hs
index 295662e..6166014 100644
--- a/src/Control/Lens/Internal.hs
+++ b/src/Control/Lens/Internal.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Control.Lens.Internal
@@ -43,4 +44,6 @@ import Control.Lens.Internal.Review
 import Control.Lens.Internal.Setter
 import Control.Lens.Internal.Zoom

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use import/export shortcut" #-}
+#endif
diff --git a/src/Control/Lens/Internal/Zipper.hs b/src/Control/Lens/Internal/Zipper.hs
index 95875b7..2840bd9 100644
--- a/src/Control/Lens/Internal/Zipper.hs
+++ b/src/Control/Lens/Internal/Zipper.hs
@@ -53,7 +53,9 @@ import Data.Profunctor.Unsafe
 -- >>> import Control.Lens
 -- >>> import Data.Char

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use foldl" #-}
+#endif

 ------------------------------------------------------------------------------
 -- * Jacket
diff --git a/src/Control/Lens/Iso.hs b/src/Control/Lens/Iso.hs
index 1152af4..66a9588 100644
--- a/src/Control/Lens/Iso.hs
+++ b/src/Control/Lens/Iso.hs
@@ -82,7 +82,9 @@ import Data.Maybe
 import Data.Profunctor
 import Data.Profunctor.Unsafe

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use on" #-}
+#endif

 -- $setup
 -- >>> :set -XNoOverloadedStrings
diff --git a/src/Control/Lens/Lens.hs b/src/Control/Lens/Lens.hs
index b26cc06..e3fe89c 100644
--- a/src/Control/Lens/Lens.hs
+++ b/src/Control/Lens/Lens.hs
@@ -126,7 +126,9 @@ import Data.Profunctor.Rep
 import Data.Profunctor.Unsafe
 import Data.Void

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use ***" #-}
+#endif

 -- $setup
 -- >>> :set -XNoOverloadedStrings
diff --git a/src/Control/Lens/Operators.hs b/src/Control/Lens/Operators.hs
index 11868e0..1c062f3 100644
--- a/src/Control/Lens/Operators.hs
+++ b/src/Control/Lens/Operators.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Control.Lens.Operators
@@ -108,4 +109,6 @@ import Control.Lens.Review
 import Control.Lens.Setter
 import Control.Lens.Zipper

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use import/export shortcut" #-}
+#endif
diff --git a/src/Control/Lens/Plated.hs b/src/Control/Lens/Plated.hs
index a8c4d20..019fded 100644
--- a/src/Control/Lens/Plated.hs
+++ b/src/Control/Lens/Plated.hs
@@ -95,7 +95,9 @@ import           Data.Data.Lens
 import           Data.Monoid
 import           Data.Tree

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Reduce duplication" #-}
+#endif

 -- | A 'Plated' type is one where we know how to extract its immediate self-similar children.
 --
diff --git a/src/Control/Lens/Prism.hs b/src/Control/Lens/Prism.hs
index 0f3253f..e3a0a01 100644
--- a/src/Control/Lens/Prism.hs
+++ b/src/Control/Lens/Prism.hs
@@ -51,7 +51,9 @@ import Data.Void
 import Unsafe.Coerce
 #endif

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use camelCase" #-}
+#endif

 -- $setup
 -- >>> :set -XNoOverloadedStrings
diff --git a/src/Control/Lens/Setter.hs b/src/Control/Lens/Setter.hs
index a1e953f..dc16dc4 100644
--- a/src/Control/Lens/Setter.hs
+++ b/src/Control/Lens/Setter.hs
@@ -87,7 +87,9 @@ import Data.Profunctor
 import Data.Profunctor.Rep
 import Data.Profunctor.Unsafe

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Avoid lambda" #-}
+#endif

 -- $setup
 -- >>> import Control.Lens
diff --git a/src/Control/Lens/TH.hs b/src/Control/Lens/TH.hs
index a05eb07..00353dc 100644
--- a/src/Control/Lens/TH.hs
+++ b/src/Control/Lens/TH.hs
@@ -87,7 +87,9 @@ import Language.Haskell.TH
 import Language.Haskell.TH.Syntax
 import Language.Haskell.TH.Lens

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Use foldl" #-}
+#endif

 -- | Flags for 'Lens' construction
 data LensFlag
diff --git a/src/Data/Data/Lens.hs b/src/Data/Data/Lens.hs
index cf1e7c9..52490b5 100644
--- a/src/Data/Data/Lens.hs
+++ b/src/Data/Data/Lens.hs
@@ -65,9 +65,11 @@ import           Data.Monoid
 import           GHC.Exts (realWorld#)
 #endif

+#ifndef DISABLE_TEMPLATE_HASKELL
 {-# ANN module "HLint: ignore Eta reduce" #-}
 {-# ANN module "HLint: ignore Use foldl" #-}
 {-# ANN module "HLint: ignore Reduce duplication" #-}
+#endif

 -- $setup
 -- >>> :set -XNoOverloadedStrings
--
1.8.4.rc3
