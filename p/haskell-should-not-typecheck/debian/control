Source: haskell-should-not-typecheck
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.9),
 cdbs,
 ghc,
 ghc-prof,
 libghc-hunit-dev (>= 1.2),
 libghc-hunit-prof,
 libghc-hspec-dev (>= 2.1),
 libghc-hspec-expectations-dev (>= 0.6),
Build-Depends-Indep: ghc-doc,
 libghc-hunit-doc,
Standards-Version: 3.9.8
Homepage: http://github.com/CRogers/should-not-typecheck
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-should-not-typecheck
Vcs-Git: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git
X-Description: verify that an expression does not typecheck
 should-not-typecheck is a Haskell library which allows you to assert
 that an expression does not typecheck in your tests. It provides one
 function, shouldNotTypecheck, which takes an expression and will fail
 the test if it typechecks. shouldNotTypecheck returns an HUnit
 Assertion (so it can be used with both HUnit and hspec).

Package: libghc-should-not-typecheck-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-should-not-typecheck-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-should-not-typecheck-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
