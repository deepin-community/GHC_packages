Source: haskell-lumberjack
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Scott Talbert <swt@techie.net>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 10),
 haskell-devscripts-minimal | haskell-devscripts (>= 0.13),
 cdbs,
 ghc,
 ghc-prof,
 libghc-contravariant-dev (>= 1.5),
 libghc-contravariant-dev (<< 1.6),
 libghc-contravariant-prof,
 libghc-prettyprinter-dev (>= 1.6),
 libghc-prettyprinter-dev (<< 1.8),
 libghc-prettyprinter-prof,
 libghc-prettyprinter-ansi-terminal-dev (>= 1.1.1.2),
 libghc-prettyprinter-ansi-terminal-dev (<< 1.2),
 libghc-prettyprinter-ansi-terminal-prof,
 libghc-contravariant-dev,
 libghc-prettyprinter-dev,
Build-Depends-Indep: ghc-doc,
 libghc-contravariant-doc,
 libghc-prettyprinter-doc,
 libghc-prettyprinter-ansi-terminal-doc,
Standards-Version: 4.6.1
Homepage: https://github.com/GaloisInc/lumberjack
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-lumberjack
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-lumberjack]
X-Description: Trek through your code forest and make logs
 This is a logging facility.  Yes, there are many, and this is the one
 with a beard, wearing flannel and boots, that gets the job done.  It's
 not the fanciest, it doesn't have a cargo-van full of features.  This
 logger is designed to be straightforward to use, provide a good set of
 standard features, and be useable across a broad set of code.
 .
  * Logging itself is a monadic activity.  This activity is most often
 performed in a monad stack with a MonadIO context to allow
 writing to files.
 .
  * The specific logging action implementations are managed separately
 from the actions of logging messages in the target code.  This
 allows logging to be configurable and the manner of logging to
 be specified at startup time without requiring changes in the
 code from which log messages are being generated.
 .
  * The logging implementation code can use contravariant functors to
 adjust existing logging.
 .
  * Main code will typically retrieve the logging actions from a Reader
 context in your monad stack.  That said, Log actions are not tied
 to an enclosing Monad.  There are helpers to support a Monad which
 can store Log actions, but Log actions can also be explicitly
 passed and used.
 .
  * The prettyprinter package is used for formatting.

Package: libghc-lumberjack-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-lumberjack-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-lumberjack-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
