Source: haskell-numeric-quest
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Iulian Udrea <iulian@physics.org>
DM-Upload-Allowed: yes
Build-Depends: debhelper (>= 9),
               cdbs,
               haskell-devscripts (>= 0.9),
               ghc,
               ghc-prof
Build-Depends-Indep: ghc-doc
Standards-Version: 3.9.4
Homepage: http://hackage.haskell.org/package/numeric-quest
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-numeric-quest
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-numeric-quest

Package: libghc-numeric-quest-dev
Architecture: any
Depends: ${haskell:Depends}, ${shlibs:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Mathematics and Quantum Mechanics${haskell:ShortBlurb}
 List based linear algebra, similtaneous linear equations, eigenvalues and
 eigenvectors, roots of polynomials, transcendent functions with arbitrary
 precision implemented by continued fractions, quantum operations, tensors
 .
 ${haskell:Blurb}

Package: libghc-numeric-quest-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Mathematics and Quantum Mechanics${haskell:ShortBlurb}
 List based linear algebra, similtaneous linear equations, eigenvalues and
 eigenvectors, roots of polynomials, transcendent functions with arbitrary
 precision implemented by continued fractions, quantum operations, tensors
 .
 ${haskell:Blurb}

Package: libghc-numeric-quest-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${haskell:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Mathematics and Quantum Mechanics${haskell:ShortBlurb}
 List based linear algebra, similtaneous linear equations, eigenvalues and
 eigenvectors, roots of polynomials, transcendent functions with arbitrary
 precision implemented by continued fractions, quantum operations, tensors
 .
 ${haskell:Blurb}
