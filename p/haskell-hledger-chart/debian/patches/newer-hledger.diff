--- a/hledger-chart.cabal
+++ b/hledger-chart.cabal
@@ -37,8 +37,8 @@
                   Hledger.Chart.Main
                   Hledger.Chart.Options
   build-depends:
-                  hledger == 0.16.1
-                 ,hledger-lib == 0.16.1
+                  hledger >= 0.17 && < 0.18
+                 ,hledger-lib >= 0.17 && < 0.18
                  ,HUnit
                  ,base >= 3 && < 5
                  ,cmdargs >= 0.8   && < 0.10
--- a/Hledger/Chart/Options.hs
+++ b/Hledger/Chart/Options.hs
@@ -8,11 +8,10 @@
 import System.Console.CmdArgs
 import System.Console.CmdArgs.Explicit

-import Hledger.Cli hiding (progname,progversion)
-import qualified Hledger.Cli (progname)
+import Hledger.Cli

-progname = Hledger.Cli.progname ++ "-chart"
-progversion = progversionstr progname
+progname = "hledger-chart"
+progversion = "0.16.1"

 defchartoutput   = "hledger.png"
 defchartitems    = 10
--- a/Hledger/Chart/Main.hs
+++ b/Hledger/Chart/Main.hs
@@ -21,16 +21,17 @@
 import Text.Printf

 import Hledger
-import Hledger.Cli hiding (progname,progversion)
+import Hledger.Cli hiding (version)
 import Prelude hiding (putStrLn)
 import Hledger.Utils.UTF8 (putStrLn)

 import Hledger.Chart.Options
+import Paths_hledger_chart

 main :: IO ()
 main = do
   opts <- getHledgerChartOpts
-  when (debug_ $ cliopts_ opts) $ printf "%s\n" progversion >> printf "opts: %s\n" (show opts)
+  when (debug_ $ cliopts_ opts) $ printf "%s\n" (show version) >> printf "opts: %s\n" (show opts)
   runWith opts

 runWith :: ChartOpts -> IO ()
@@ -38,8 +39,8 @@
     where
       run opts
           | "help" `in_` (rawopts_ $ cliopts_ opts)            = putStr (showModeHelp chartmode) >> exitSuccess
-          | "version" `in_` (rawopts_ $ cliopts_ opts)         = putStrLn progversion >> exitSuccess
-          | "binary-filename" `in_` (rawopts_ $ cliopts_ opts) = putStrLn (binaryfilename progname)
+          | "version" `in_` (rawopts_ $ cliopts_ opts)         = putStrLn (show version) >> exitSuccess
+          | "binary-filename" `in_` (rawopts_ $ cliopts_ opts) = putStrLn (binaryfilename "hledger-chart")
           | otherwise                                          = withJournalDo' opts chart

 withJournalDo' :: ChartOpts -> (ChartOpts -> Journal -> IO ()) -> IO ()
