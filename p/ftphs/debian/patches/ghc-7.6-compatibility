Description: Port to work with catch from Control.Exception as found in GHC 7.6
Author: Iain Lane <iain.lane@canonical.com>
Forwarded: yes

--- ftphs-1.0.8.orig/src/Network/FTP/Server.hs
+++ ftphs-1.0.8/src/Network/FTP/Server.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE ScopedTypeVariables #-}
 {- arch-tag: FTP server support
 Copyright (C) 2004 John Goerzen <jgoerzen@complete.org>

@@ -98,7 +99,7 @@ import Text.Printf
 import Data.Char
 import Data.IORef
 import Data.List
-import Control.Exception(finally)
+import Control.Exception(finally, try, catch, IOException)
 import System.IO

 data DataType = ASCII | Binary
@@ -168,8 +169,8 @@ trapIOError :: FTPServer -> IO a -> (a -
 trapIOError h testAction remainingAction =
     do result <- try testAction
        case result of
-         Left err -> do sendReply h 550 (show err)
-                        return True
+         Left (err :: IOException) -> do sendReply h 550 (show err)
+                                         return True
          Right result -> remainingAction result

 forceLogin :: CommandHandler -> CommandHandler
@@ -214,7 +215,7 @@ commandLoop h@(FTPServer fh _ _) =
                                     ("Closing due to error: " ++ (show e))
                             hClose fh
                             return False
-        in do continue <- (flip catch) errorhandler
+        in do continue <- (flip catch) (\(e :: IOException) -> errorhandler e)
                (do x <- parseCommand fh
                    case x of
                      Left err -> do sendReply h 500 $
