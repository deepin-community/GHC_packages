Description: Fixes for changed behaviour in GHC 7.4
  - Use mkTyCon3 instead of deprecated mkTyCon in DB/HSQL/Error.hs. Takes 3
    Strings: (Package Name, Module Name, Constructor)
  - Also import constructors of CType in DB/HSQL/Type/Time.hsc. GHC 7.6 will
    make using abstract newtypes in FFI declarations an error (for now it is
    just a warning).
  - Use FlexibleInstances extension in DB/HSQL/Type/Diverse.hs in order to
    allow SqlBind instance to be defined for String ([Char]).
Author: Iain Lane <laney@debian.org>
Forwarded: private email

--- haskell-hsql-1.8.1.orig/DB/HSQL/Error.hs
+++ haskell-hsql-1.8.1/DB/HSQL/Error.hs
@@ -4,7 +4,7 @@
 module DB.HSQL.Error(SqlError(..),sqlErrorTc) where

 import Control.Exception(Exception(..),SomeException(..))
-import Data.Dynamic(Typeable,TyCon,mkTyCon,cast)
+import Data.Typeable(Typeable,TyCon,mkTyCon3,cast)

 import DB.HSQL.Type(SqlType)

@@ -32,7 +32,7 @@ instance Typeable SqlError where
 #endif

 sqlErrorTc :: TyCon
-sqlErrorTc = mkTyCon "Database.HSQL.SqlError"
+sqlErrorTc = mkTyCon3 "Database" "HSQL" "SqlError"

 -- |
 instance Show SqlError where
--- haskell-hsql-1.8.1.orig/DB/HSQL/Type/Time.hsc
+++ haskell-hsql-1.8.1/DB/HSQL/Type/Time.hsc
@@ -8,7 +8,7 @@ import System.Time(ClockTime(..),Calenda
 import Text.ParserCombinators.ReadP(ReadP,char,skipSpaces,readP_to_S)
 import Text.Read.Lex(readDecP)
 import Foreign(Ptr,allocaBytes,pokeByteOff)
-import Foreign.C(CTime,CInt)
+import Foreign.C(CTime(..),CInt)

 import DB.HSQL.Type
     (SqlType(SqlTimeTZ,SqlTime,SqlDate,SqlDateTimeTZ,SqlDateTime
--- haskell-hsql-1.8.1.orig/DB/HSQL/Type/Diverse.hs
+++ haskell-hsql-1.8.1/DB/HSQL/Type/Diverse.hs
@@ -1,4 +1,4 @@
-{-# LANGUAGE TypeSynonymInstances #-}
+{-# LANGUAGE TypeSynonymInstances, FlexibleInstances #-}
 module DB.HSQL.Type.Diverse where

 import Foreign(nullPtr)
