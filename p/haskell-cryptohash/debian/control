Source: haskell-cryptohash
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
 libghc-byteable-dev,
 libghc-byteable-prof,
 libghc-hunit-dev,
 libghc-quickcheck2-dev (>= 2),
 libghc-tasty-dev,
 libghc-tasty-hunit-dev,
 libghc-tasty-quickcheck-dev,
Build-Depends-Indep: ghc-doc,
 libghc-byteable-doc,
Standards-Version: 3.9.6
Homepage: http://github.com/vincenthz/hs-cryptohash
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-cryptohash
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-cryptohash

Package: libghc-cryptohash-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: collection of crypto hashes, fast, pure and practical${haskell:ShortBlurb}
 A collection of crypto hashes, with a practical incremental and
 one-pass, pure APIs, with performance close to the fastest
 implementations available in others languages.
 .
 The implementations are made in C with a haskell FFI wrapper that
 hide the C implementation.
 .
 ${haskell:Blurb}

Package: libghc-cryptohash-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: collection of crypto hashes, fast, pure and practical${haskell:ShortBlurb}
 A collection of crypto hashes, with a practical incremental and
 one-pass, pure APIs, with performance close to the fastest
 implementations available in others languages.
 .
 The implementations are made in C with a haskell FFI wrapper that
 hide the C implementation.
 .
 ${haskell:Blurb}

Package: libghc-cryptohash-doc
Architecture: all
Section: doc
Depends: ${misc:Depends},
 ${haskell:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: collection of crypto hashes, fast, pure and practical${haskell:ShortBlurb}
 A collection of crypto hashes, with a practical incremental and
 one-pass, pure APIs, with performance close to the fastest
 implementations available in others languages.
 .
 The implementations are made in C with a haskell FFI wrapper that
 hide the C implementation.
 .
 ${haskell:Blurb}
