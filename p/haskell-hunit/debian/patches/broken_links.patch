# Description: Correct broken links in documentation
#  Some " were left without a quote in the documentation.  This patch only
#  changes them to \".
# Bug: http://sourceforge.net/tracker/?func=detail&aid=2955563&group_id=46796&atid=447396
# Forwarded: http://sourceforge.net/tracker/download.php?group_id=46796&atid=447396&file_id=363731&aid=2955563
# Author: Marco TÃºlio Gontijo e Silva <marcot@debian.org>
# Last-Update: 2010-02-20
Index: HUnit-1.2.2.1/Test/HUnit.hs
===================================================================
--- HUnit-1.2.2.1.orig/Test/HUnit.hs	2010-02-20 11:08:41.000000000 -0200
+++ HUnit-1.2.2.1/Test/HUnit.hs	2010-02-20 11:09:16.000000000 -0200
@@ -12,17 +12,17 @@
 --  Define test cases as appropriate:
 -- 
 -- @
---    test1 = TestCase (assertEqual "for (foo 3)," (1,2) (foo 3))
+--    test1 = TestCase (assertEqual \"for (foo 3),\" (1,2) (foo 3))
 --    test2 = TestCase (do (x,y) <- partA 3
---                         assertEqual "for the first result of partA," 5 x
+--                         assertEqual \"for the first result of partA,\" 5 x
 --                         b <- partB y
---                         assertBool ("(partB " ++ show y ++ ") failed") b)
+--                         assertBool (\"(partB \" ++ show y ++ \") failed\") b)
 -- @
 --
 -- Name the test cases and group them together:
 --
 -- @
---    tests = TestList [TestLabel "test1" test1, TestLabel "test2" test2]
+--    tests = TestList [TestLabel \"test1\" test1, TestLabel \"test2\" test2]
 -- @
 --
 -- Run the tests as a group. At a Haskell interpreter prompt, apply the function
@@ -51,10 +51,10 @@
 -- functions that HUnit provides:
 --
 -- @
---    tests = test [ "test1" ~: "(foo 3)" ~: (1,2) ~=? (foo 3),
---                   "test2" ~: do (x, y) <- partA 3
---                                 assertEqual "for the first result of partA," 5 x
---                                 partB y \@? "(partB " ++ show y ++ ") failed" ]
+--    tests = test [ \"test1\" ~: \"(foo 3)\" ~: (1,2) ~=? (foo 3),
+--                   \"test2\" ~: do (x, y) <- partA 3
+--                                 assertEqual \"for the first result of partA,\" 5 x
+--                                 partB y \@? \"(partB \" ++ show y ++ \") failed\" ]
 -- @
 --
 -- Assuming the same test failures as before, you would see:
