Source: haskell-atomic-write
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Ilias Tsitsimpis <iliastsi@debian.org>
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends: debhelper (>= 10),
 haskell-devscripts (>= 0.13),
 cdbs,
 ghc,
 ghc-prof,
 libghc-temporary-dev,
 libghc-temporary-prof,
 libghc-unix-compat-dev,
 libghc-unix-compat-prof,
 libghc-hspec-dev,
 libghc-hspec-prof,
Build-Depends-Indep: ghc-doc,
 libghc-temporary-doc,
 libghc-unix-compat-doc,
Standards-Version: 4.6.2
Homepage: https://github.com/stackbuilders/atomic-write
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-atomic-write
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-atomic-write]
X-Description: Atomically write to a file
 Atomically write to a file on POSIX-compliant systems while preserving
 permissions.
 .
 On most Unix systems, `mv` is an atomic operation. This makes it simple to
 write to a file atomically just by using the mv operation. However, this will
 destroy the permissions on the original file. This library does the following
 to preserve permissions while atomically writing to a file:
 .
 * If an original file exists, take those permissions and apply them to the
 temp file before `mv`ing the file into place.
 .
 * If the original file does not exist, create a following with default
 permissions (based on the currently-active umask).
 .
 This way, when the file is `mv`'ed into place, the permissions will be the
 ones held by the original file.
 .
 This library is based on similar implementations found in common libraries in
 Ruby and Python.

Package: libghc-atomic-write-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-atomic-write-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-atomic-write-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
