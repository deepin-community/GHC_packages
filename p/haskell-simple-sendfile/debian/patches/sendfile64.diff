Description: Go back to using sendfile64 everywhere
 GHC is built with -D_FILE_OFFSET_BITS=64 or equivalent, so we need to use
 sendfile64 to make sure that COff is the same width as the off_t expected
 by the sendfile* syscall we're calling, since apparently hsc2hs doesn't
 figure this out for us.  32-bit big-endian architectures fail tests without
 this, as simple-sendfile ends up poking a 32-bit offset into the most
 significant half of a 64-bit value.
Author: Colin Watson <cjwatson@debian.org>
Forwarded: no
Last-Update: 2014-07-04

Index: b/Network/Sendfile/BSD.hsc
===================================================================
--- a/Network/Sendfile/BSD.hsc
+++ b/Network/Sendfile/BSD.hsc
@@ -184,7 +184,7 @@
     poke sentp len
     c_sendfile fd s off sentp hdrp 0

-foreign import ccall unsafe "sys/uio.h sendfile"
+foreign import ccall unsafe "sys/uio.h sendfile64"
     c_sendfile :: Fd -> Fd -> COff -> Ptr COff -> Ptr SfHdtr -> CInt -> IO CInt

 isFreeBSD :: Bool
@@ -196,7 +196,7 @@
 sendFile fd s off len sentp hdrp =
     c_sendfile fd s off (fromIntegral len) hdrp sentp 0

-foreign import ccall unsafe "sys/uio.h sendfile"
+foreign import ccall unsafe "sys/uio.h sendfile64"
     c_sendfile :: Fd -> Fd -> COff -> CSize -> Ptr SfHdtr -> Ptr COff -> CInt -> IO CInt

 isFreeBSD :: Bool
Index: b/Network/Sendfile/Linux.hsc
===================================================================
--- a/Network/Sendfile/Linux.hsc
+++ b/Network/Sendfile/Linux.hsc
@@ -106,7 +106,7 @@
             when (left /= 0) $ sendfileloop dst src offp left hook

 -- Dst Src in order. take care
-foreign import ccall unsafe "sendfile"
+foreign import ccall unsafe "sendfile64"
     c_sendfile :: Fd -> Fd -> Ptr COff -> CSize -> IO (#type ssize_t)

 ----------------------------------------------------------------
