--- a/Network/Protocol/XMPP/Stanza.hs
+++ b/Network/Protocol/XMPP/Stanza.hs
@@ -252,7 +252,7 @@
 parseIQ :: X.Element -> Maybe IQ
 parseIQ elemt = do
	typeStr <- X.attributeText "type" elemt
-	iqType <- case typeStr of
+	iqT <- case typeStr of
		"get"    -> Just IQGet
		"set"    -> Just IQSet
		"result" -> Just IQResult
@@ -266,7 +266,7 @@
	let payload = case X.elementChildren elemt of
		[] -> Nothing
		child:_ -> Just child
-	return (IQ iqType msgTo msgFrom msgID msgLang payload)
+	return (IQ iqT msgTo msgFrom msgID msgLang payload)

 xmlJID :: X.Name -> X.Element -> Maybe (Maybe JID)
 xmlJID name elemt = case X.attributeText name elemt of
