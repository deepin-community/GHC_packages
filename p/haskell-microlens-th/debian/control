Source: haskell-microlens-th
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Joachim Breitner <nomeata@debian.org>
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-microlens-dev (<< 0.5),
 libghc-microlens-dev (>= 0.4.0),
 libghc-microlens-prof,
 libghc-th-abstraction-dev (>= 0.4.1),
 libghc-th-abstraction-dev (<< 0.5),
 libghc-th-abstraction-prof,
Build-Depends-Indep: ghc-doc,
 libghc-microlens-doc,
 libghc-th-abstraction-doc,
Standards-Version: 4.6.1
Homepage: http://github.com/monadfix/microlens
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-microlens-th
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-microlens-th]
X-Description: Automatic generation of record lenses for microlens
 This package lets you automatically generate lenses for data types; code was
 extracted from the lens package, and therefore generated lenses are fully
 compatible with ones generated by lens (and can be used both from lens and
 microlens).
 .
 This package is a part of the microlens family.

Package: libghc-microlens-th-dev
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}, ${shlibs:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Provides: ${haskell:Provides}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-microlens-th-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Provides: ${haskell:Provides}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-microlens-th-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Conflicts: ${haskell:Conflicts}
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
