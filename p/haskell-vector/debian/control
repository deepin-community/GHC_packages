Source: haskell-vector
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Joachim Breitner <nomeata@debian.org>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.13),
 cdbs,
 ghc (>= 8),
 ghc-prof,
 libghc-primitive-dev (>= 0.5.0.1),
 libghc-primitive-dev (<< 0.7),
 libghc-primitive-prof,
 libghc-hunit-dev,
 libghc-quickcheck2-dev (>= 2.9),
 libghc-quickcheck2-dev (<< 2.10),
 libghc-random-dev,
 libghc-test-framework-dev,
 libghc-test-framework-hunit-dev,
 libghc-test-framework-quickcheck2-dev,
Build-Depends-Indep: ghc-doc,
 libghc-primitive-doc,
Standards-Version: 4.1.4
Homepage: https://github.com/haskell/vector
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-vector
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git

Package: libghc-vector-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Efficient Arrays for Haskell${haskell:ShortBlurb}
 An efficient implementation of Int-indexed arrays (both mutable and
 immutable), with a powerful loop fusion optimization framework.
 .
 ${haskell:Blurb}

Package: libghc-vector-prof
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Efficient Arrays for Haskell${haskell:ShortBlurb}
 An efficient implementation of Int-indexed arrays (both mutable and
 immutable), with a powerful loop fusion optimization framework.
 .
 ${haskell:Blurb}

Package: libghc-vector-doc
Architecture: all
Section: doc
Depends: ${misc:Depends},
 ${haskell:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: Efficient Arrays for Haskell${haskell:ShortBlurb}
 An efficient implementation of Int-indexed arrays (both mutable and
 immutable), with a powerful loop fusion optimization framework.
 .
 ${haskell:Blurb}
