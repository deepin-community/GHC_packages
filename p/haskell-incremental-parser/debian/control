Source: haskell-incremental-parser
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Clint Adams <clint@debian.org>,
Priority: extra
Section: haskell
Build-Depends:
 cdbs,
 debhelper (>= 9),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.10),
 libghc-monoid-subclasses-dev (<< 0.5),
 libghc-monoid-subclasses-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-monoid-subclasses-doc,
Standards-Version: 3.9.8
Homepage: http://patch-tag.com/r/blamario/incremental-parser/wiki/
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-incremental-parser
Vcs-Git: https://anonscm.debian.org/git/pkg-haskell/DHG_packages.git
X-Description: generic incremental parsers
 Incremental parsers can provide partial results from partial input.
 This parser library is implemented using the concept of Brzozowski
 derivatives, tweaked and optimized to work with any monoidal input
 type. Lists, ByteString, and Text are supported out of the box, as
 well as any other data type for which the monoid-subclasses package
 defines instances.  If the parser result is also a monoid, the
 parser can provide it incrementally, before the complete input is
 parsed.

Package: libghc-incremental-parser-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-incremental-parser-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-incremental-parser-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
