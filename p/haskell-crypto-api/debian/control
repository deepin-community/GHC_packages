Source: haskell-crypto-api
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Clint Adams <clint@debian.org>,
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-cereal-dev (>= 0.2),
 libghc-cereal-prof,
 libghc-entropy-dev,
 libghc-entropy-prof,
 libghc-tagged-dev (>= 0.1),
 libghc-tagged-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-cereal-doc,
 libghc-entropy-doc,
 libghc-tagged-doc,
Standards-Version: 4.5.0
Homepage: https://github.com/TomMD/crypto-api
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-crypto-api
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-crypto-api]

Package: libghc-crypto-api-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: generic interface for cryptographic operations${haskell:ShortBlurb}
 A generic interface for cryptographic operations, platform independent
 quality RNG, property tests and known-answer tests (KATs) for common
 algorithms, and a basic benchmark infrastructure. Maintainers of hash
 and cipher implementations are encouraged to add instances for the
 classes defined in Crypto.Classes. Crypto users are similarly
 encouraged to use the interfaces defined in the Classes module. Any
 concepts or functions of general use to more than one cryptographic
 algorithm (ex: padding) is within scope of this package.
 .
 ${haskell:Blurb}

Package: libghc-crypto-api-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: generic interface for cryptographic operations${haskell:ShortBlurb}
 A generic interface for cryptographic operations, platform independent
 quality RNG, property tests and known-answer tests (KATs) for common
 algorithms, and a basic benchmark infrastructure. Maintainers of hash
 and cipher implementations are encouraged to add instances for the
 classes defined in Crypto.Classes. Crypto users are similarly
 encouraged to use the interfaces defined in the Classes module. Any
 concepts or functions of general use to more than one cryptographic
 algorithm (ex: padding) is within scope of this package.
 .
 ${haskell:Blurb}

Package: libghc-crypto-api-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: generic interface for cryptographic operations${haskell:ShortBlurb}
 A generic interface for cryptographic operations, platform independent
 quality RNG, property tests and known-answer tests (KATs) for common
 algorithms, and a basic benchmark infrastructure. Maintainers of hash
 and cipher implementations are encouraged to add instances for the
 classes defined in Crypto.Classes. Crypto users are similarly
 encouraged to use the interfaces defined in the Classes module. Any
 concepts or functions of general use to more than one cryptographic
 algorithm (ex: padding) is within scope of this package.
 .
 ${haskell:Blurb}
