Source: haskell-maybet
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Dmitry Bogatov <KAction@gnu.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.9),
 cdbs,
 ghc,
 ghc-prof,
 libghc-mtl-dev,
 libghc-mtl-prof,
Build-Depends-Indep: ghc-doc,
 libghc-mtl-doc,
Standards-Version: 3.9.6
Homepage: http://hackage.haskell.org/package/MaybeT
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-maybet
Vcs-Git: git://git.debian.org/git/pkg-haskell/DHG_packages.git
X-Description: MaybeT monad transformer
 Package provides monad transformer MaybeT with following properties:
 .
  * Computation type: computations which may fail or return nothing.
  * Binding strategy: Failure returns the value 'Nothing', bypassing any
    bound functions which follow.  Success returns a value wrapped in 'Just'.
 .
 This monad transformer is useful for building computations from steps which
 may fail. No error information is returned.
 .
 If error information is required, see 'Control.Monad.Except', provided by
 'libghc-mtl-dev' package.


Package: libghc-maybet-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-maybet-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-maybet-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
