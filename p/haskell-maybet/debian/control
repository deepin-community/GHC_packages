Source: haskell-maybet
Priority: extra
Section: haskell
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Giovanni Mascellani <gio@debian.org>
Build-Depends:
 debhelper (>= 7),
 haskell-devscripts,
 cdbs,
 ghc,
 ghc-prof,
 libghc-mtl-dev,
 libghc-mtl-prof
Build-Depends-Indep:
 ghc-doc,
 libghc-mtl-doc
Standards-Version: 3.9.4
Homepage: http://hackage.haskell.org/package/MaybeT
Vcs-Darcs: http://darcs.debian.org/darcs/pkg-haskell/haskell-maybet
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-maybet

Package: libghc-maybet-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Description: Haskell MaybeT monad transformer - GHC libraries
 MaybeT is a Haskell monad transformer that adds Maybe semantics to an
 existing monad, making it able to fail (i.e. return Nothing) or be
 successful (return the result wrapped in a Just).
 .
 If you don't know what a Haskell monad is, you can just ignore this package.
 .
 This package contains the libraries compiled for GHC.

Package: libghc-maybet-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Description: Haskell MaybeT monad transformer - GHC profiling libraries
 MaybeT is a Haskell monad transformer that adds Maybe semantics to an
 existing monad, making it able to fail (i.e. return Nothing) or be
 successful (return the result wrapped in a Just).
 .
 If you don't know what a Haskell monad is, you can just ignore this package.
 .
 This package contains the profiling libraries compiled for GHC.

Package: libghc-maybet-doc
Section: doc
Architecture: all
Depends:
 ${haskell:Depends},
 ${misc:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Description: Haskell MaybeT monad transformer - documentation
 MaybeT is a Haskell monad transformer that adds Maybe semantics to an
 existing monad, making it able to fail (i.e. return Nothing) or be
 successful (return the result wrapped in a Just).
 .
 If you don't know what a Haskell monad is, you can just ignore this package.
 .
 This package contains the library documentation.
