Source: haskell-rank2classes
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Priority: optional
Section: haskell
Build-Depends: debhelper (>= 10),
 haskell-devscripts-minimal | haskell-devscripts (>= 0.13),
 cdbs,
 ghc,
 ghc-prof,
 libghc-distributive-dev (<< 0.7),
 libghc-distributive-prof (<< 0.7),
 libghc-tasty-dev (<< 2),
 libghc-tasty-prof (<< 2),
 libghc-tasty-hunit-dev (>= 0),
 libghc-tasty-hunit-dev (<< 1),
 libghc-tasty-hunit-prof (>= 0),
 libghc-tasty-hunit-prof (<< 1),
 libghc-cabal-doctest-dev (>= 1),
 libghc-doctest-dev (>= 0.8),
 markdown-unlit,
Build-Depends-Indep: ghc-doc,
 libghc-distributive-doc,
Standards-Version: 4.6.1
Homepage: https://github.com/blamario/grampa/tree/master/rank2classes
X-Description: rank-2-type standard type constructor class hierarchy
 A mirror image of the standard type constructor class hierarchy
 rooted in 'Functor', except with methods of rank 2 types and class
 instances of kind (k -> *) -> *. The classes enable generic handling
 of heterogenously typed data structures and other neat tricks.

Package: libghc-rank2classes-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-rank2classes-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-rank2classes-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
