Source: haskell-data-accessor
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
Build-Depends-Indep: ghc-doc,
Standards-Version: 3.9.6
Homepage: http://www.haskell.org/haskellwiki/Record_access
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-data-accessor
Vcs-Darcs: http://darcs.debian.org/pkg-haskell/haskell-data-accessor

Package: libghc-data-accessor-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Utilities for accessing and manipulating fields of records${haskell:ShortBlurb}
 With this library you can define record field accessors which allow
 setting, getting and modifying values easily. You can combine accessors
 of a record and sub-records to make the access look like the fields
 of the sub-record belong to the main record.
 .
 ${haskell:Blurb}

Package: libghc-data-accessor-prof
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: Utilities for accessing and manipulating fields of records${haskell:ShortBlurb}
 With this library you can define record field accessors which allow
 setting, getting and modifying values easily. You can combine accessors
 of a record and sub-records to make the access look like the fields
 of the sub-record belong to the main record.
 .
 ${haskell:Blurb}

Package: libghc-data-accessor-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: Utilities for accessing and manipulating fields of records${haskell:ShortBlurb}
 With this library you can define record field accessors which allow
 setting, getting and modifying values easily. You can combine accessors
 of a record and sub-records to make the access look like the fields
 of the sub-record belong to the main record.
 .
 ${haskell:Blurb}
