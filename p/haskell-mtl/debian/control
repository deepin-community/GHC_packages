Source: haskell-mtl
Section: haskell
Priority: extra
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Joachim Breitner <nomeata@debian.org>
Standards-Version: 3.9.4
Build-Depends:
 debhelper (>= 9),
 haskell-devscripts (>= 0.8.15),
 ghc,
 ghc-doc,
 ghc-prof,
 libghc-transformers-dev (>= 0.3),
 libghc-transformers-dev (<< 0.4),
 libghc-transformers-prof,
 libghc-transformers-doc,
 cdbs
Homepage: http://hackage.haskell.org/package/mtl
Vcs-Darcs: http://darcs.debian.org/darcs/pkg-haskell/haskell-mtl
Vcs-Browser: http://darcs.debian.org/cgi-bin/darcsweb.cgi?r=pkg-haskell/haskell-mtl

Package: libghc-mtl-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Description: Haskell monad transformer library for GHC${haskell:ShortBlurb}
 ${haskell:Blurb}
 .
 MTL is a monad transformer library, inspired by the paper "Functional
 Programming with Overloading and Higher-Order Polymorphism",
 by Mark P Jones (<http://www.cse.ogi.edu/~mpj/>), Advanced School
 of Functional Programming, 1995.

Package: libghc-mtl-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Provides: ${haskell:Provides}
Description: Haskell monad transformer library for GHC${haskell:ShortBlurb}
 ${haskell:Blurb}
 .
 MTL is a monad transformer library, inspired by the paper "Functional
 Programming with Overloading and Higher-Order Polymorphism",
 by Mark P Jones (<http://www.cse.ogi.edu/~mpj/>), Advanced School
 of Functional Programming, 1995.

Package: libghc-mtl-doc
Section: doc
Architecture: all
Depends: ${haskell:Depends}, ${misc:Depends}
Suggests: ${haskell:Suggests}
Recommends: ${haskell:Recommends}
Description: Haskell monad transformer library for GHC${haskell:ShortBlurb}
 ${haskell:Blurb}
 .
 MTL is a monad transformer library, inspired by the paper "Functional
 Programming with Overloading and Higher-Order Polymorphism",
 by Mark P Jones (<http://www.cse.ogi.edu/~mpj/>), Advanced School
 of Functional Programming, 1995.
