--- a/csec/clock.c
+++ b/csec/clock.c
@@ -119,7 +119,7 @@ void clock_readres_threadtime(long* t)
 // ***********************

 #include <time.h>
-#ifdef __MACH__
+#if defined(__MACH__) && defined(__APPLE__)
   #include <mach/clock.h>
   #include <mach/mach.h>
   #define CLOCK_ID_T clock_id_t
@@ -138,7 +138,7 @@ void clock_readres_threadtime(long* t)

 void time_(CLOCK_ID_T clock, long* t)
 {
-  #ifdef __MACH__
+  #if defined(__MACH__) && defined(__APPLE__)
     // OS X does not have clock_gettime, use clock_get_time
     // see http://stackoverflow.com/questions/11680461/monotonic-clock-on-osx
     clock_serv_t cclock;
@@ -188,7 +188,7 @@ void clock_readtime_threadtime(long* t)

 void res_(CLOCK_ID_T clock, long* t)
 {
-  #ifdef __MACH__
+  #if defined(__MACH__) && defined(__APPLE__)
     clock_serv_t cclock;
     int nsecs;
     mach_msg_type_number_t count;
