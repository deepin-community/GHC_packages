#! /bin/sh
# postinst script for ghc6-doc
#
set -e

libdir=/usr/lib/ghc6-doc

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

gen_contents_index () {
    NAMES=
    HADDOCK_ARGS=`cat /usr/lib/ghc-@VERSION@/package.conf | perl -ne '
$pkg = $1 if /PackageName "(.*?)"/;
next if $pkg eq "ghc";
$pkg =~ y/A-Z/a-z/;
$skip = 0; foreach my $name (@names) {if ($name eq $pkg) {$skip=1; last;}}
push @names, $pkg;
next if $skip;
next unless /haddockInterfaces = \["(.*?)"/;
$iface = $1;
next unless -r $iface;
next unless /haddockHTMLs = \["(.*?)"/;
$html = $1;
undef $hpath;
if ($html =~ m,^/usr/share/doc/([^/]*-doc/html/.*),) {$hpath = "../../$1";}
elsif ($html =~ m,^/usr/share/doc/ghc6-doc/libraries/(.*),) {$hpath = $1;}
else {next;}
print "--read-interface=$hpath,$iface\n";
'`
    haddock --gen-index --gen-contents \
	-o /usr/share/doc/ghc6-doc/libraries/ \
	-t "Haskell Hierarchical Libraries" \
	-p /usr/share/doc/ghc6-doc/libraries/prologue.txt \
	$HADDOCK_ARGS
}

case "$1" in
    triggered|configure)
        gen_contents_index
	;;
    abort-upgrade|abort-remove|abort-deconfigure)
	;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
