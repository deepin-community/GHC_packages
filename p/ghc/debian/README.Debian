GHC for Debian
--------------

In case you're seeing internal compiler errors:
-----------------------------------------------

Short story: If you have updated from GHC 6.10.x and see internal
errors when compiling programs, first see if removing old .hi files
will help.

Long story: .haddock files (GHC library documentation interface
description files) used to be architecture independent.  Since 6.10.1,
they weren't anymore, since haddock started using GHC's internal ABI
to keep track of the libraries' interfaces.

On Debian's end, this made documentation packages created on 32 bit
architectures to fail on 64 bit architectures, and vice versa.  This
was worked around by patching ghc to use a 32 bit representation for
it's internal Binary module's integers.  This caused all sorts of
internal errors for GHC if it was given an object file that was
generated with an old version that used to use 64 bit integers.
Later, GHC was changed to use 64 bit integers for storage on all
architectures, supposedly since it was safer, but in practice only
repeating the above scenario again.

There's no easy way of detecting a mismatching integer bit width in
files.  There's a magic number with all GHC interface files but
bumping that on Debian's end would open a yet another can of worms.

Starting with 6.12.1, GHC will use whatever integer representation
upstream uses in its internal Binary module and .haddock and .hi files
will be treated as architecture dependent.  Object files from 6.10
wouldn't work with GHC 6.12, even if it didn't fail at mismatching
integer widths already.

 -- Kari Pahula <kaol@debian.org>, Sat,  9 Jan 2010 17:50:32 +0200
