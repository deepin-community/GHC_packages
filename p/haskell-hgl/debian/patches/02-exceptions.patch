Description: Convert old-style try/catch to new-style Control.Exception
 style. This gets rids of several compilation warnings.
Forwarded: yes
Author: Ernesto Hern√°ndez-Novich <emhn@usb.ve>

--- a/Graphics/HGL/X11/Display.hs
+++ b/Graphics/HGL/X11/Display.hs
@@ -1,3 +1,5 @@
+{-# LANGUAGE ScopedTypeVariables #-}
+
 -- #hide
 module Graphics.HGL.X11.Display
	( getDisplayName
@@ -14,12 +16,13 @@
 import Control.Monad (when)
 import Data.Maybe (isJust)
 import System.Environment (getEnv)
-import System.IO.Error (try)
 import System.IO.Unsafe (unsafePerformIO)

+import qualified Control.Exception as CE
+
 getDisplayName :: IO String
 getDisplayName = do
-  disp <- try (getEnv "DISPLAY")
+  disp <- CE.try (getEnv "DISPLAY") :: IO (Either CE.IOException String)
   return (either (const ":0.0") id disp)

 displayRef :: MVar (Maybe X.Display)
@@ -32,8 +35,9 @@
   openDisplay'
  where
   openDisplay' = do
-    display <- X.openDisplay host `catch` \ err ->
-                 ioError (userError ("Unable to open X display " ++ host))
+    display <- X.openDisplay host
+               `CE.catch`
+               (\(e :: CE.SomeException) -> ioError $ userError $ "Unable to open X display " ++ host)
     modMVar displayRef (const $ Just display)
     return display

--- a/Graphics/HGL/X11/Types.hs
+++ b/Graphics/HGL/X11/Types.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE ScopedTypeVariables #-}
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Graphics.HGL.X11.Types
@@ -26,6 +27,7 @@
 import Graphics.HGL.Internals.Types

 import qualified Graphics.X11.Xlib as X
+import qualified Control.Exception as CE

 import Control.Concurrent.MVar (MVar)
 import Data.Bits
@@ -84,7 +86,7 @@
   (X.Color p _ _ _ _) <-
       X.allocColor display color_map (X.Color 0 r g b xcolor_flags)
   return p)
-     `catch` \ err ->
+     `CE.catch` \(err :: CE.SomeException) ->
                print err >> return 0
 --	       ioError (userError ("Error: " ++ show err
 --			      ++ "\nUnable to allocate colo[u]r " ++ show (r,g,b)
