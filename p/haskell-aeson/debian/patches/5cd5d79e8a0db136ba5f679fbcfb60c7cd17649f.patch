From 5cd5d79e8a0db136ba5f679fbcfb60c7cd17649f Mon Sep 17 00:00:00 2001
From: Bryan O'Sullivan <bos@serpentine.com>
Date: Fri, 22 Jan 2016 10:14:42 -0800
Subject: [PATCH] No bitwise comparison on ToJSON/ToEncoding results (gh-340)

---
 tests/DataFamilies/Properties.hs |  6 +++---
 tests/Properties.hs              | 17 ++++++-----------
 2 files changed, 9 insertions(+), 14 deletions(-)

Index: haskell-aeson/tests/DataFamilies/Properties.hs
===================================================================
--- haskell-aeson.orig/tests/DataFamilies/Properties.hs	2016-01-22 22:08:26.189073858 +0100
+++ haskell-aeson/tests/DataFamilies/Properties.hs	2016-01-22 22:08:26.185073775 +0100
@@ -61,11 +61,11 @@
       , testProperty "ApproxDefault" $
         thApproxToJSONDefault `sameAs` thApproxToEncodingDefault
       , testProperty "SomeType2ElemArray" $
-        thSomeTypeToJSON2ElemArray `sameAsV` thSomeTypeToEncoding2ElemArray
+        thSomeTypeToJSON2ElemArray `sameAs` thSomeTypeToEncoding2ElemArray
       , testProperty "SomeTypeTaggedObject" $
-        thSomeTypeToJSONTaggedObject `sameAsV` thSomeTypeToEncodingTaggedObject
+        thSomeTypeToJSONTaggedObject `sameAs` thSomeTypeToEncodingTaggedObject
       , testProperty "SomeTypeObjectWithSingleField" $
-        thSomeTypeToJSONObjectWithSingleField `sameAsV`
+        thSomeTypeToJSONObjectWithSingleField `sameAs`
         thSomeTypeToEncodingObjectWithSingleField
       ]
     ]
Index: haskell-aeson/tests/Properties.hs
===================================================================
--- haskell-aeson.orig/tests/Properties.hs	2016-01-22 22:08:26.189073858 +0100
+++ haskell-aeson/tests/Properties.hs	2016-01-22 22:08:26.185073775 +0100
@@ -63,16 +63,11 @@
     result :: Result ()
     result = parse parser ()
 
--- | Perform a bit-for-bit comparison of two encoding methods.
+-- | Perform a structural comparison of the results of two encoding
+-- methods. Compares decoded values to account for HashMap-driven
+-- variation in JSON object key ordering.
 sameAs :: (a -> Value) -> (a -> Encoding) -> a -> Property
 sameAs toVal toEnc v =
-  toLazyByteString (encodeToBuilder (toVal v)) ===
-  toLazyByteString (fromEncoding (toEnc v))
-
--- | Behaves like 'sameAs', but compares decoded values to account for
--- HashMap-driven variation in JSON object key ordering.
-sameAsV :: (a -> Value) -> (a -> Encoding) -> a -> Property
-sameAsV toVal toEnc v =
   eitherDecode (toLazyByteString (fromEncoding (toEnc v))) === Right (toVal v)
 
 type P6 = Product6 Int Bool String (Approx Double) (Int, Approx Double) ()
@@ -191,11 +186,11 @@
       , testProperty "ApproxDefault" $
         thApproxToJSONDefault `sameAs` thApproxToEncodingDefault
       , testProperty "SomeType2ElemArray" $
-        thSomeTypeToJSON2ElemArray `sameAsV` thSomeTypeToEncoding2ElemArray
+        thSomeTypeToJSON2ElemArray `sameAs` thSomeTypeToEncoding2ElemArray
       , testProperty "SomeTypeTaggedObject" $
-        thSomeTypeToJSONTaggedObject `sameAsV` thSomeTypeToEncodingTaggedObject
+        thSomeTypeToJSONTaggedObject `sameAs` thSomeTypeToEncodingTaggedObject
       , testProperty "SomeTypeObjectWithSingleField" $
-        thSomeTypeToJSONObjectWithSingleField `sameAsV`
+        thSomeTypeToJSONObjectWithSingleField `sameAs`
         thSomeTypeToEncodingObjectWithSingleField
       ]
     ]
