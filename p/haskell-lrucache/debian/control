Source: haskell-lrucache
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Joachim Breitner <nomeata@debian.org>,
Priority: optional
Section: haskell
Build-Depends:
 cdbs,
 debhelper (>= 9),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-contravariant-dev (<< 2),
 libghc-contravariant-dev (>= 0.5),
 libghc-contravariant-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-contravariant-doc,
Standards-Version: 4.1.1
Homepage: http://github.com/chowells79/lrucache
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-lrucache
Vcs-Git: https://anonscm.debian.org/git/pkg-haskell/DHG_packages.git

Package: libghc-lrucache-dev
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: simple, pure least-recent-used cache${haskell:ShortBlurb}
 This package contains a simple, pure LRU cache, implemented in terms of
 "Data.Map".
 .
 It also contains a mutable IO wrapper providing atomic updates to an LRU
 cache.
 .
 ${haskell:Blurb}

Package: libghc-lrucache-prof
Architecture: any
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Provides:
 ${haskell:Provides},
Description: simple, pure least-recent-used cache${haskell:ShortBlurb}
 This package contains a simple, pure LRU cache, implemented in terms of
 "Data.Map".
 .
 It also contains a mutable IO wrapper providing atomic updates to an LRU
 cache.
 .
 ${haskell:Blurb}

Package: libghc-lrucache-doc
Architecture: all
Section: doc
Depends:
 ${haskell:Depends},
 ${misc:Depends},
Recommends:
 ${haskell:Recommends},
Suggests:
 ${haskell:Suggests},
Description: simple, pure least-recent-used cache${haskell:ShortBlurb}
 This package contains a simple, pure LRU cache, implemented in terms of
 "Data.Map".
 .
 It also contains a mutable IO wrapper providing atomic updates to an LRU
 cache.
 .
 ${haskell:Blurb}
