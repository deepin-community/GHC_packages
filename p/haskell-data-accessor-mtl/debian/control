Source: haskell-data-accessor-mtl
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Joachim Breitner <nomeata@debian.org>
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 9),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-data-accessor-dev (<< 0.4),
 libghc-data-accessor-dev (>= 0.2),
 libghc-data-accessor-prof,
 libghc-mtl-dev (<< 2.3),
 libghc-mtl-dev (>= 1.0),
 libghc-mtl-prof,
Build-Depends-Indep: ghc-doc, libghc-data-accessor-doc, libghc-mtl-doc
Standards-Version: 4.1.4
Homepage: http://www.haskell.org/haskellwiki/Record_access
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-data-accessor-mtl
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-data-accessor-mtl]

Package: libghc-data-accessor-mtl-dev
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}, ${shlibs:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: use Data.Accessor inside the State monad.${haskell:ShortBlurb}
 This Haskell library provides methods to access the state in a State monad by
 means of Data.Accessor getters, setters and modifiers.
 .
 ${haskell:Blurb}

Package: libghc-data-accessor-mtl-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: use Data.Accessor inside the State monad${haskell:ShortBlurb}
 This Haskell library provides methods to access the state in a State monad by
 means of Data.Accessor getters, setters and modifiers.
 .
 ${haskell:Blurb}

Package: libghc-data-accessor-mtl-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: use Data.Accessor inside the State monad${haskell:ShortBlurb}
 This Haskell library provides methods to access the state in a State monad by
 means of Data.Accessor getters, setters and modifiers.
 .
 ${haskell:Blurb}
