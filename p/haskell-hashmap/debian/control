Source: haskell-hashmap
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Clint Adams <clint@debian.org>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
 libghc-hashable-dev (>= 1.0),
 libghc-hashable-prof,
Build-Depends-Indep: ghc-doc,
 libghc-hashable-doc,
Standards-Version: 3.9.6
Homepage: http://git.auryn.cz/haskell/hashmap/
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/
Vcs-Git: git://git.debian.org/git/pkg-haskell/DHG_packages.git

Package: libghc-hashmap-dev
Architecture: any
Depends: ${haskell:Depends},
 ${shlibs:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: persistent containers Map and Set based on hashing${haskell:ShortBlurb}
 An implementation of persistent Map and Set containers based on hashing.
 The implementation is build on top of Data.IntMap.IntMap and
 Data.IntSet.IntSet, with very similar API. It uses Hashable class from the
 hashable package for hashing.
 .
 This package can be used as a drop-in replacement for Data.Map and Data.Set
 modules.
 .
 The Map key value is an Data.IntMap.IntMap indexed by the hash value,
 containing either one (key, value) or a Data.Map.Map key value for all
 keys with the same hash value.
 .
 The Set elem is an Data.IntMap.IntMap indexed by the hash value, containing
 either one elem or Data.Set.Set elem for all elements with the same hash
 value.
 .
 ${haskell:Blurb}

Package: libghc-hashmap-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Provides: ${haskell:Provides},
Description: persistent containers Map and Set based on hashing${haskell:ShortBlurb}
 An implementation of persistent Map and Set containers based on hashing.
 The implementation is build on top of Data.IntMap.IntMap and
 Data.IntSet.IntSet, with very similar API. It uses Hashable class from the
 hashable package for hashing.
 .
 This package can be used as a drop-in replacement for Data.Map and Data.Set
 modules.
 .
 The Map key value is an Data.IntMap.IntMap indexed by the hash value,
 containing either one (key, value) or a Data.Map.Map key value for all
 keys with the same hash value.
 .
 The Set elem is an Data.IntMap.IntMap indexed by the hash value, containing
 either one elem or Data.Set.Set elem for all elements with the same hash
 value.
 .
 ${haskell:Blurb}

Package: libghc-hashmap-doc
Architecture: all
Section: doc
Depends: ${misc:Depends},
 ${haskell:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Description: persistent containers Map and Set based on hashing${haskell:ShortBlurb}
 An implementation of persistent Map and Set containers based on hashing.
 The implementation is build on top of Data.IntMap.IntMap and
 Data.IntSet.IntSet, with very similar API. It uses Hashable class from the
 hashable package for hashing.
 .
 This package can be used as a drop-in replacement for Data.Map and Data.Set
 modules.
 .
 The Map key value is an Data.IntMap.IntMap indexed by the hash value,
 containing either one (key, value) or a Data.Map.Map key value for all
 keys with the same hash value.
 .
 The Set elem is an Data.IntMap.IntMap indexed by the hash value, containing
 either one elem or Data.Set.Set elem for all elements with the same hash
 value.
 .
 ${haskell:Blurb}
