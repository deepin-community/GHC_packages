Source: haskell-objectname
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Ilias Tsitsimpis <iliastsi@debian.org>
Priority: optional
Section: haskell
Rules-Requires-Root: no
Build-Depends:
 cdbs,
 debhelper (>= 10),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
Build-Depends-Indep: ghc-doc
Standards-Version: 4.6.2
Homepage: https://github.com/svenpanne/ObjectName
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/haskell-objectname
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git [p/haskell-objectname]

Package: libghc-objectname-dev
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}, ${shlibs:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Explicitly handled object names${haskell:ShortBlurb}
 This tiny package contains the class ObjectName, which corresponds to the
 general notion of explicitly handled identifiers for API objects, e.g. a
 texture object name in OpenGL or a buffer object name in OpenAL.
 .
 ${haskell:Blurb}

Package: libghc-objectname-prof
Architecture: any
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Provides: ${haskell:Provides}
Description: Explicitly handled object names${haskell:ShortBlurb}
 This tiny package contains the class ObjectName, which corresponds to the
 general notion of explicitly handled identifiers for API objects, e.g. a
 texture object name in OpenGL or a buffer object name in OpenAL.
 .
 ${haskell:Blurb}

Package: libghc-objectname-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends}, ${misc:Depends}
Recommends: ${haskell:Recommends}
Suggests: ${haskell:Suggests}
Description: Explicitly handled object names${haskell:ShortBlurb}
 This tiny package contains the class ObjectName, which corresponds to the
 general notion of explicitly handled identifiers for API objects, e.g. a
 texture object name in OpenGL or a buffer object name in OpenAL.
 .
 ${haskell:Blurb}
