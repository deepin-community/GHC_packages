From: Helmut Grohne <helmut@subdivi.de>
Subject: make TemplateHaskell usage optional
Last-Update: 2014-10-23

The only use of TemplateHaskell in ShellCheck is for collecting QuickCheck
properties. Unfortunately this means that the main ShellCheck modules do not
build on non-TH architectures. This patch removes the runTests symbol defined
using TemplateHaskell on non-TH architectures by branching on the
Debian-specific DEBIAN_NO_GHCI CPP macro (Thanks to Joachim Breitner).

Index: ShellCheck-0.3.7/ShellCheck/Analytics.hs
===================================================================
--- ShellCheck-0.3.7.orig/ShellCheck/Analytics.hs	2015-04-30 21:00:47.000000000 +0200
+++ ShellCheck-0.3.7/ShellCheck/Analytics.hs	2015-04-30 21:03:09.000000000 +0200
@@ -15,8 +15,16 @@
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -}
-{-# LANGUAGE TemplateHaskell, FlexibleContexts #-}
-module ShellCheck.Analytics (AnalysisOptions(..), defaultAnalysisOptions, filterByAnnotation, runAnalytics, shellForExecutable, runTests) where
+{-# LANGUAGE CPP #-}
+{-# LANGUAGE FlexibleContexts #-}
+#ifndef DEBIAN_NO_GHCI
+{-# LANGUAGE TemplateHaskell #-}
+#endif
+module ShellCheck.Analytics (AnalysisOptions(..), defaultAnalysisOptions, filterByAnnotation, runAnalytics, shellForExecutable
+#ifndef DEBIAN_NO_GHCI
+	, runTests
+#endif
+	) where

 import Control.Arrow (first)
 import Control.Monad
@@ -35,7 +43,9 @@
 import ShellCheck.Parser hiding (runTests)
 import ShellCheck.Regex
 import qualified Data.Map as Map
+#ifndef DEBIAN_NO_GHCI
 import Test.QuickCheck.All (forAllProperties)
+#endif
 import Test.QuickCheck.Test (quickCheckWithResult, stdArgs, maxSuccess)

 data Parameters = Parameters {
@@ -3312,5 +3322,7 @@
 checkMaskedReturns _ _ = return ()


+#ifndef DEBIAN_NO_GHCI
 return []
 runTests =  $( [| $(forAllProperties) (quickCheckWithResult (stdArgs { maxSuccess = 1 }) ) |])
+#endif
Index: ShellCheck-0.3.7/ShellCheck/Parser.hs
===================================================================
--- ShellCheck-0.3.7.orig/ShellCheck/Parser.hs	2015-04-30 21:00:47.000000000 +0200
+++ ShellCheck-0.3.7/ShellCheck/Parser.hs	2015-04-30 21:04:25.000000000 +0200
@@ -15,8 +15,15 @@
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -}
-{-# LANGUAGE NoMonomorphismRestriction, TemplateHaskell, FlexibleContexts #-}
-module ShellCheck.Parser (Note(..), Severity(..), parseShell, ParseResult(..), ParseNote(..), sortNotes, noteToParseNote, runTests, readScript) where
+{-# LANGUAGE CPP, NoMonomorphismRestriction, FlexibleContexts #-}
+#ifndef DEBIAN_NO_GHCI
+{-# LANGUAGE TemplateHaskell #-}
+#endif
+module ShellCheck.Parser (Note(..), Severity(..), parseShell, ParseResult(..), ParseNote(..), sortNotes, noteToParseNote
+#ifndef DEBIAN_NO_GHCI
+	, runTests
+#endif
+	, readScript) where

 import ShellCheck.AST
 import ShellCheck.Data
@@ -34,7 +41,9 @@
 import System.IO
 import Text.Parsec.Error
 import GHC.Exts (sortWith)
+#ifndef DEBIAN_NO_GHCI
 import Test.QuickCheck.All (quickCheckAll)
+#endif

 backslash = char '\\'
 linefeed = optional carriageReturn >> char '\n'
@@ -2164,6 +2173,8 @@
 lt x = trace (show x) x
 ltt t = trace (show t)

+#ifndef DEBIAN_NO_GHCI
 return []
 runTests = $quickCheckAll
+#endif

Index: ShellCheck-0.3.7/ShellCheck/Simple.hs
===================================================================
--- ShellCheck-0.3.7.orig/ShellCheck/Simple.hs	2015-04-30 21:00:47.000000000 +0200
+++ ShellCheck-0.3.7/ShellCheck/Simple.hs	2015-04-30 21:00:47.000000000 +0200
@@ -15,15 +15,24 @@
     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -}
+{-# LANGUAGE CPP #-}
+#ifndef DEBIAN_NO_GHCI
 {-# LANGUAGE TemplateHaskell #-}
-module ShellCheck.Simple (shellCheck, ShellCheckComment, scLine, scColumn, scSeverity, scCode, scMessage, runTests) where
+#endif
+module ShellCheck.Simple (shellCheck, ShellCheckComment, scLine, scColumn, scSeverity, scCode, scMessage
+#ifndef DEBIAN_NO_GHCI
+	, runTests
+#endif
+	) where

 import Data.List
 import Data.Maybe
 import ShellCheck.Analytics hiding (runTests)
 import ShellCheck.Options
 import ShellCheck.Parser hiding (runTests)
+#ifndef DEBIAN_NO_GHCI
 import Test.QuickCheck.All (quickCheckAll)
+#endif
 import Text.Parsec.Pos

 shellCheck :: AnalysisOptions -> String -> [ShellCheckComment]
@@ -75,6 +84,7 @@
 prop_optionDisablesIssue2 =
     null $ shellCheck (defaultAnalysisOptions { optionExcludes = [2148, 1037] }) "echo \"$10\""

+#ifndef DEBIAN_NO_GHCI
 return []
 runTests = $quickCheckAll
-
+#endif
