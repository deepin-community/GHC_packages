Index: b/src/BNFC/PrettyPrint.hs
===================================================================
--- a/src/BNFC/PrettyPrint.hs
+++ b/src/BNFC/PrettyPrint.hs
@@ -8,6 +8,7 @@ module BNFC.PrettyPrint
   ) where
 
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 -- | Pretty print separator with a dot
 -- >>> "abc" <.> "py"
Index: b/src/BNFC/Backend/C/CFtoCAbs.hs
===================================================================
--- a/src/BNFC/Backend/C/CFtoCAbs.hs
+++ b/src/BNFC/Backend/C/CFtoCAbs.hs
@@ -48,6 +48,7 @@ import BNFC.Backend.Common.NamedVariable
 import Data.Function (on)
 import Data.List
 import Data.Char(toLower)
+import Prelude hiding ((<>))
 
 
 --The result is two files (.H file, .C file)
Index: b/src/BNFC/Backend/C/CFtoCPrinter.hs
===================================================================
--- a/src/BNFC/Backend/C/CFtoCPrinter.hs
+++ b/src/BNFC/Backend/C/CFtoCPrinter.hs
@@ -51,6 +51,7 @@ import Data.List
 import Data.Char(toLower)
 import Data.Either (lefts)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces (.h file, .c file)
 cf2CPrinter :: CF -> (String, String)
Index: b/src/BNFC/Backend/CPP/NoSTL/CFtoCPPAbs.hs
===================================================================
--- a/src/BNFC/Backend/CPP/NoSTL/CFtoCPPAbs.hs
+++ b/src/BNFC/Backend/CPP/NoSTL/CFtoCPPAbs.hs
@@ -48,6 +48,7 @@ import BNFC.Backend.Common.OOAbstract
 import Data.List
 import Data.Char(toLower)
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 
 --The result is two files (.H file, .C file)
Index: b/src/BNFC/Backend/CPP/NoSTL/CFtoCVisitSkel.hs
===================================================================
--- a/src/BNFC/Backend/CPP/NoSTL/CFtoCVisitSkel.hs
+++ b/src/BNFC/Backend/CPP/NoSTL/CFtoCVisitSkel.hs
@@ -47,6 +47,7 @@ import Data.List
 import Data.Char(toLower, toUpper)
 import Data.Either (lefts)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces (.H file, .C file)
 cf2CVisitSkel :: CF -> (String, String)
Index: b/src/BNFC/Backend/CPP/NoSTL/RegToFlex.hs
===================================================================
--- a/src/BNFC/Backend/CPP/NoSTL/RegToFlex.hs
+++ b/src/BNFC/Backend/CPP/NoSTL/RegToFlex.hs
@@ -3,6 +3,7 @@ module BNFC.Backend.CPP.NoSTL.RegToFlex
 -- modified from pretty-printer generated by the BNF converter
 
 import AbsBNF
+import Prelude hiding ((<>))
 
 -- the top-level printing method
 printRegFlex :: Reg -> String
Index: b/src/BNFC/Backend/CPP/PrettyPrinter.hs
===================================================================
--- a/src/BNFC/Backend/CPP/PrettyPrinter.hs
+++ b/src/BNFC/Backend/CPP/PrettyPrinter.hs
@@ -30,6 +30,7 @@ import BNFC.Backend.Common.StrUtils (ren
 import Data.Char(toLower)
 import BNFC.Backend.CPP.STL.STLUtils
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces (.H file, .C file)
 cf2CPPPrinter :: Bool -> Maybe String -> CF -> (String, String)
Index: b/src/BNFC/Backend/CPP/STL/CFtoBisonSTL.hs
===================================================================
--- a/src/BNFC/Backend/CPP/STL/CFtoBisonSTL.hs
+++ b/src/BNFC/Backend/CPP/STL/CFtoBisonSTL.hs
@@ -54,6 +54,7 @@ import ErrM
 import BNFC.Backend.CPP.STL.STLUtils
 import BNFC.Backend.C.CFtoBisonC (startSymbol)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 --This follows the basic structure of CFtoHappy.
 
Index: b/src/BNFC/Backend/CSharp/RegToGPLEX.hs
===================================================================
--- a/src/BNFC/Backend/CSharp/RegToGPLEX.hs
+++ b/src/BNFC/Backend/CSharp/RegToGPLEX.hs
@@ -3,6 +3,7 @@ module BNFC.Backend.CSharp.RegToGPLEX (p
 -- modified from RegToFlex
 
 import AbsBNF
+import Prelude hiding ((<>))
 
 -- the top-level printing method
 printRegGPLEX :: Reg -> String
Index: b/src/BNFC/Backend/Common.hs
===================================================================
--- a/src/BNFC/Backend/Common.hs
+++ b/src/BNFC/Backend/Common.hs
@@ -2,6 +2,7 @@ module BNFC.Backend.Common (renderListSe
 -- Functions common to different backends
 
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 -- | Helper function for c-like languages that generates the code printing
 -- the list separator according to the given precedence level:
Index: b/src/BNFC/Backend/Common/NamedVariables.hs
===================================================================
--- a/src/BNFC/Backend/Common/NamedVariables.hs
+++ b/src/BNFC/Backend/Common/NamedVariables.hs
@@ -73,6 +73,7 @@ import Data.List (nub)
 import Text.PrettyPrint
 import Control.Arrow (left, (&&&))
 import Data.Either (lefts)
+import Prelude hiding ((<>))
 
 type IVar = (String, Int)
 --The type of an instance variable
Index: b/src/BNFC/Backend/Haskell/CFtoPrinter.hs
===================================================================
--- a/src/BNFC/Backend/Haskell/CFtoPrinter.hs
+++ b/src/BNFC/Backend/Haskell/CFtoPrinter.hs
@@ -27,6 +27,7 @@ import Data.Either (lefts)
 import Data.List (sortBy)
 import Data.Maybe (fromJust)
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 -- derive pretty-printer from a BNF grammar. AR 15/2/2002
 cf2Printer :: Bool -> Bool -> Bool -> String -> String -> CF -> String
Index: b/src/BNFC/Backend/Haskell/ToCNF.hs
===================================================================
--- a/src/BNFC/Backend/Haskell/ToCNF.hs
+++ b/src/BNFC/Backend/Haskell/ToCNF.hs
@@ -38,6 +38,7 @@ import Control.Applicative hiding (Const
 import qualified Data.Map as M
 import Data.Pair
 import Text.PrettyPrint.HughesPJ hiding (first,(<>))
+import Prelude hiding ((<>))
 
 -- Code generation
 
Index: b/src/BNFC/Backend/Haskell/Utils.hs
===================================================================
--- a/src/BNFC/Backend/Haskell/Utils.hs
+++ b/src/BNFC/Backend/Haskell/Utils.hs
@@ -8,6 +8,7 @@ module BNFC.Backend.Haskell.Utils
 import Text.PrettyPrint
 import BNFC.CF (Cat(..), identCat, normCat)
 import BNFC.Utils (mkNames, NameStyle(..))
+import Prelude hiding ((<>))
 
 -- | Create a valid parser function name for a given category
 -- >>> parserName (Cat "Abcd")
Index: b/src/BNFC/Backend/Java.hs
===================================================================
--- a/src/BNFC/Backend/Java.hs
+++ b/src/BNFC/Backend/Java.hs
@@ -54,6 +54,7 @@ import BNFC.Backend.Java.CFtoFoldVisitor
 import BNFC.Backend.Java.CFtoAllVisitor
 import qualified BNFC.Backend.Common.Makefile as Makefile
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 -------------------------------------------------------------------
 -- | Build the Java output.
 -- FIXME: get everything to put the files in the right places.
Index: b/src/BNFC/Backend/Java/CFtoComposVisitor.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoComposVisitor.hs
+++ b/src/BNFC/Backend/Java/CFtoComposVisitor.hs
@@ -27,6 +27,7 @@ import BNFC.Backend.Common.NamedVariable
 import Data.List
 import Data.Either (lefts)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 cf2ComposVisitor :: String -> String -> CF -> String
 cf2ComposVisitor packageBase packageAbsyn cf =
Index: b/src/BNFC/Backend/Java/CFtoFoldVisitor.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoFoldVisitor.hs
+++ b/src/BNFC/Backend/Java/CFtoFoldVisitor.hs
@@ -26,6 +26,7 @@ import BNFC.Utils ((+++))
 import BNFC.Backend.Common.NamedVariables
 import Data.Either (lefts)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 cf2FoldVisitor :: String -> String -> CF -> String
 cf2FoldVisitor packageBase packageAbsyn cf =
Index: b/src/BNFC/Backend/Java/CFtoJLex15.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoJLex15.hs
+++ b/src/BNFC/Backend/Java/CFtoJLex15.hs
@@ -44,6 +44,7 @@ import BNFC.Backend.Java.RegToJLex
 import BNFC.Utils ( (+++) )
 import BNFC.Backend.Common.NamedVariables
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 --The environment must be returned for the parser to use.
 cf2jlex :: String -> CF -> Bool -> (Doc, SymEnv)
Index: b/src/BNFC/Backend/Java/CFtoJavaAbs15.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoJavaAbs15.hs
+++ b/src/BNFC/Backend/Java/CFtoJavaAbs15.hs
@@ -54,6 +54,7 @@ import Data.List
 import Data.Char(toLower)
 import Data.Maybe (mapMaybe)
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces abstract data types in Java.
 --These follow Appel's "non-object oriented" version.
Index: b/src/BNFC/Backend/Java/CFtoJavaPrinter15.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoJavaPrinter15.hs
+++ b/src/BNFC/Backend/Java/CFtoJavaPrinter15.hs
@@ -56,6 +56,7 @@ import Data.List
 import Data.Char	( toLower, isSpace )
 import Data.Either (lefts)
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces the PrettyPrinter class.
 --It will generate two methods "print" and "show"
Index: b/src/BNFC/Backend/Java/CFtoVisitSkel15.hs
===================================================================
--- a/src/BNFC/Backend/Java/CFtoVisitSkel15.hs
+++ b/src/BNFC/Backend/Java/CFtoVisitSkel15.hs
@@ -46,6 +46,7 @@ import BNFC.Utils ((+++))
 import BNFC.Backend.Common.NamedVariables
 import Text.PrettyPrint
 import Data.Either (lefts)
+import Prelude hiding ((<>))
 
 --Produces a Skeleton using the Visitor Design Pattern.
 --Thus the user can choose which Skeleton to use.
Index: b/src/BNFC/Backend/OCaml/CFtoOCamlLex.hs
===================================================================
--- a/src/BNFC/Backend/OCaml/CFtoOCamlLex.hs
+++ b/src/BNFC/Backend/OCaml/CFtoOCamlLex.hs
@@ -27,6 +27,7 @@ import Data.List
 import Data.Char
 import Text.PrettyPrint hiding (render)
 import qualified Text.PrettyPrint as PP
+import Prelude hiding ((<>))
 
 import BNFC.CF
 import AbsBNF
Index: b/src/BNFC/Backend/OCaml/CFtoOCamlPrinter.hs
===================================================================
--- a/src/BNFC/Backend/OCaml/CFtoOCamlPrinter.hs
+++ b/src/BNFC/Backend/OCaml/CFtoOCamlPrinter.hs
@@ -28,6 +28,7 @@ import Data.Char(toLower)
 import BNFC.Backend.OCaml.OCamlUtil
 import BNFC.PrettyPrint
 import BNFC.Backend.Haskell.CFtoPrinter (compareRules)
+import Prelude hiding ((<>))
 
 
 -- derive pretty-printer from a BNF grammar. AR 15/2/2002
Index: b/src/BNFC/Backend/Pygments.hs
===================================================================
--- a/src/BNFC/Backend/Pygments.hs
+++ b/src/BNFC/Backend/Pygments.hs
@@ -15,6 +15,7 @@ import BNFC.Lexing
 import BNFC.Options hiding (Backend)
 import BNFC.Utils
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 makePygments :: SharedOptions -> CF -> Backend
 makePygments opts cf = do
Index: b/src/BNFC/Lexing.hs
===================================================================
--- a/src/BNFC/Lexing.hs
+++ b/src/BNFC/Lexing.hs
@@ -6,6 +6,7 @@ import Data.List (inits)
 import AbsBNF (Reg(..))
 import PrintBNF
 import BNFC.CF
+import Prelude hiding ((<>))
 
 
 p :: Reg -> IO ()
Index: b/src/BNFC/ToCNFCore.hs
===================================================================
--- a/src/BNFC/ToCNFCore.hs
+++ b/src/BNFC/ToCNFCore.hs
@@ -41,6 +41,7 @@ import Data.Function (on)
 import Data.Char (isAlphaNum,ord)
 import Data.Pair
 import Text.PrettyPrint.HughesPJ hiding (first,(<>))
+import Prelude hiding ((<>))
 
 (f *** g) (a,b) = (f a, g b)
 second g = id *** g
Index: b/src/BNFC/Backend/OCaml/CFtoOCamlTest.hs
===================================================================
--- a/src/BNFC/Backend/OCaml/CFtoOCamlTest.hs
+++ b/src/BNFC/Backend/OCaml/CFtoOCamlTest.hs
@@ -23,6 +23,7 @@ import Text.PrettyPrint
 
 import BNFC.CF
 import BNFC.Backend.OCaml.OCamlUtil
+import Prelude hiding ((<>))
 
 -- | OCaml comment
 -- >>> comment "I'm a comment"
Index: b/src/BNFC/Backend/Haskell/CFtoTemplate.hs
===================================================================
--- a/src/BNFC/Backend/Haskell/CFtoTemplate.hs
+++ b/src/BNFC/Backend/Haskell/CFtoTemplate.hs
@@ -23,6 +23,7 @@ module BNFC.Backend.Haskell.CFtoTemplate
 import BNFC.Backend.Haskell.Utils (catvars)
 import BNFC.CF
 import BNFC.PrettyPrint
+import Prelude hiding ((<>))
 
 type ModuleName = String
 
Index: b/src/BNFC/Backend/Haskell/CFtoAbstract.hs
===================================================================
--- a/src/BNFC/Backend/Haskell/CFtoAbstract.hs
+++ b/src/BNFC/Backend/Haskell/CFtoAbstract.hs
@@ -23,6 +23,7 @@ import BNFC.CF
 import BNFC.Utils((+++))
 import BNFC.Backend.Haskell.Utils (catToType, catvars)
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 -- to produce a Haskell module
 cf2Abstract :: Bool     -- ^ Use ByteString instead of String
Index: b/src/BNFC/Backend/C/CFtoCSkel.hs
===================================================================
--- a/src/BNFC/Backend/C/CFtoCSkel.hs
+++ b/src/BNFC/Backend/C/CFtoCSkel.hs
@@ -47,6 +47,7 @@ import Data.Char                ( toLowe
 import Data.Either (lefts)
 
 import Text.PrettyPrint
+import Prelude hiding ((<>))
 
 --Produces (.H file, .C file)
 cf2CSkel :: CF -> (String, String)
