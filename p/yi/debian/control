Source: yi
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders:
 Marcel Fourne <debian@marcelfourne.de>
Priority: optional
Section: haskell
Build-Depends:
 alex (>= 3.0.3),
 cdbs,
 debhelper (>= 9),
 ghc (>= 8),
 ghc-prof,
 haskell-devscripts (>= 0.13),
 libghc-microlens-platform-dev (>= 0.3.4.0),
 libghc-microlens-platform-prof,
 libghc-mtl-dev (>= 2.2.1),
 libghc-mtl-prof,
 libghc-optparse-applicative-dev (>= 0.13.0.0),
 libghc-optparse-applicative-prof,
 libghc-yi-core-dev (>= 0.13.0.1),
 libghc-yi-core-prof,
 libghc-yi-frontend-pango-dev,
 libghc-yi-frontend-pango-prof,
 libghc-yi-frontend-vty-dev,
 libghc-yi-frontend-vty-prof,
 libghc-yi-keymap-emacs-dev,
 libghc-yi-keymap-emacs-prof,
 libghc-yi-keymap-vim-dev,
 libghc-yi-keymap-vim-prof,
 libghc-yi-misc-modes-dev (>= 0.13.0.1),
 libghc-yi-misc-modes-prof,
 libghc-yi-mode-haskell-dev (>= 0.13.0.1),
 libghc-yi-mode-haskell-prof,
 libghc-yi-mode-javascript-dev (>= 0.13.0.1),
 libghc-yi-mode-javascript-prof,
 libghc-yi-rope-dev (>= 0.7.0.1),
 libghc-yi-rope-prof,
Build-Depends-Indep:
 ghc-doc,
 libghc-yi-rope-doc,
 libghc-microlens-platform-doc,
 libghc-mtl-doc,
 libghc-optparse-applicative-doc,
 libghc-yi-core-doc,
 libghc-yi-frontend-pango-doc,
 libghc-yi-frontend-vty-doc,
 libghc-yi-keymap-emacs-doc,
 libghc-yi-keymap-vim-doc,
 libghc-yi-misc-modes-doc,
 libghc-yi-mode-haskell-doc,
 libghc-yi-mode-javascript-doc,
 libghc-yi-rope-doc,
Standards-Version: 4.1.4
Homepage: https://github.com/yi-editor/yi#readme
Vcs-Browser: https://salsa.debian.org/haskell-team/DHG_packages/tree/master/p/yi
Vcs-Git: https://salsa.debian.org/haskell-team/DHG_packages.git

Package: yi
Architecture: any
Section: editors
Depends:
 libghc-yi-frontend-pango-dev,
 ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Description: Haskell-Scriptable Editor
 Yi is a text editor written in Haskell and extensible in Haskell.  The goal
 of the Yi project is to provide a flexible, powerful, and correct editor
 for haskell hacking.
 .
 This package comes pre-configured with the default configuration. If
 you want to build your custom-configured version, make sure that
 libghc-yi-core-dev is installed and put your configuration in
 ~/.config/yi/yi.hs
