Index: yi-0.7.1/src/library/Yi/Syntax/Tree.hs
===================================================================
--- yi-0.7.1.orig/src/library/Yi/Syntax/Tree.hs	2014-08-04 11:25:59.621939411 +0200
+++ yi-0.7.1/src/library/Yi/Syntax/Tree.hs	2014-08-04 11:25:59.621939411 +0200
@@ -25,6 +25,7 @@
 import Data.Monoid (First(..), Last(..), getFirst, getLast, mempty)
 #ifdef TESTING
 import Test.QuickCheck
+import Test.QuickCheck.Property (unProperty)
 #endif

 import Yi.Buffer.Basic
@@ -339,33 +340,35 @@
    let final@(_, (_, finalSubtree)) = fromLeafAfterToFinal p n
        finalRegion = subtreeRegion finalSubtree
        initialRegion = nodeRegion n
-
+
    whenFail (do putStrLn $ "final = " ++ show final
                 putStrLn $ "final reg = " ++ show finalRegion
                 putStrLn $ "initialReg = " ++ show initialRegion
                 putStrLn $ "p = " ++ show p
-            )
+            )
      ((regionStart finalRegion <= p) && (initialRegion `includedRegion` finalRegion))

 prop_allLeavesAfter :: NTTT -> Property
-prop_allLeavesAfter (N n@(xs,t)) = do
+prop_allLeavesAfter (N n@(xs,t)) = property $ do
   let after = allLeavesRelative afterChild n
   (xs',t') <- elements after
   let t'' = walkDown (xs',t)
-  whenFail (do putStrLn $ "t' = " ++ show t'
-               putStrLn $ "t'' = " ++ show t''
-               putStrLn $ "xs' = " ++ show xs'
-           ) (Just t' == t'' && xs <= xs')
+  unProperty $ whenFail (do
+      putStrLn $ "t' = " ++ show t'
+      putStrLn $ "t'' = " ++ show t''
+      putStrLn $ "xs' = " ++ show xs'
+    ) (Just t' == t'' && xs <= xs')

 prop_allLeavesBefore :: NTTT -> Property
-prop_allLeavesBefore (N n@(xs,t)) = do
+prop_allLeavesBefore (N n@(xs,t)) = property $ do
   let after = allLeavesRelative beforeChild n
   (xs',t') <- elements after
   let t'' = walkDown (xs',t)
-  whenFail (do putStrLn $ "t' = " ++ show t'
-               putStrLn $ "t'' = " ++ show t''
-               putStrLn $ "xs' = " ++ show xs'
-           ) (Just t' == t'' && xs' <= xs)
+  unProperty $ whenFail (do
+      putStrLn $ "t' = " ++ show t'
+      putStrLn $ "t'' = " ++ show t''
+      putStrLn $ "xs' = " ++ show xs'
+    ) (Just t' == t'' && xs' <= xs)

 prop_fromNodeToLeafAfter :: NTTT -> Property
 prop_fromNodeToLeafAfter (N n) = forAll (pointInside (subtreeRegion $ snd n)) $ \p -> do
