Source: haskell-numtype-dk
Maintainer: Debian Haskell Group <pkg-haskell-maintainers@lists.alioth.debian.org>
Uploaders: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
Priority: extra
Section: haskell
Build-Depends: debhelper (>= 9),
 haskell-devscripts (>= 0.10),
 cdbs,
 ghc,
 ghc-prof,
Build-Depends-Indep: ghc-doc,
Standards-Version: 3.9.8
Homepage: https://github.com/bjornbm/numtype-dk
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git/tree/p/haskell-numtype-dk
Vcs-Git: https://anonscm.debian.org/cgit/pkg-haskell/DHG_packages.git
X-Description: Type-level integers, using TypeNats, Data Kinds, and Closed Type Families
 This package provides type level representations of the
 (positive and negative) integers and basic operations (addition,
 subtraction, multiplication, division, exponentiation) on these.
 The numtype-dk package differs from the numtype package in that
 the NumTypes are implemented using Data Kinds, TypeNats, and
 Closed Type Families rather than Functional Dependencies.
 Requires GHC 7.8 or later.

Package: libghc-numtype-dk-dev
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
 ${shlibs:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-numtype-dk-prof
Architecture: any
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Provides: ${haskell:Provides},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}

Package: libghc-numtype-dk-doc
Architecture: all
Section: doc
Depends: ${haskell:Depends},
 ${misc:Depends},
Recommends: ${haskell:Recommends},
Suggests: ${haskell:Suggests},
Conflicts: ${haskell:Conflicts},
Description: ${haskell:ShortDescription}${haskell:ShortBlurb}
 ${haskell:LongDescription}
 .
 ${haskell:Blurb}
